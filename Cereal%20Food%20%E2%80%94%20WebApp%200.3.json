{"files":[{"id":"afe5169f-3287-4288-a92f-676c2dfa6f5f","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/Rome\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"7d1e975c-c245-4fa4-bce5-2324de0d9cf2","name":"config","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CONFIG \u0026 ROLES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nconst DB_NAME   \u003d \u0027CF_WEBAPP_DB\u0027;\nconst PROP_DB_ID \u003d \u0027CF_DB_SPREADSHEET_ID\u0027;\nconst BG_FILE_ID \u003d \u002711oYH1C5lRSOWWPafm30bDaLqKXsfvGDv\u0027; // imagen de fondo (Drive)\n\n/** ISO-8601 ahora */\nfunction nowIso_(){ return new Date().toISOString(); }\n\n/** Script Properties (trim) */\nfunction getProp_(key){\n  return (PropertiesService.getScriptProperties().getProperty(key) || \u0027\u0027).trim();\n}\n\n/** Roles CAPO/JEFE normalizados ‚Äî acepta c√≥digos (R001/R002/R003) o nombres (JEFE/CAPOTURNO/VICE) */\nfunction isCapoOrJefe_(role){\n  const r \u003d String(role || \u0027\u0027).trim().toUpperCase();\n  return r \u003d\u003d\u003d \u0027JEFE\u0027 || r \u003d\u003d\u003d \u0027CAPOTURNO\u0027 || r \u003d\u003d\u003d \u0027VICE\u0027 || r \u003d\u003d\u003d \u0027VICE_CAPOTURNO\u0027 || r \u003d\u003d\u003d \u0027R001\u0027 || r \u003d\u003d\u003d \u0027R002\u0027 || r \u003d\u003d\u003d \u0027R003\u0027;\n}\n"},{"id":"2583352a-7b6d-4887-8159-76e08a2e75fe","name":"index","type":"html","source":"\u003c!doctype html\u003e\n\u003chtml lang\u003d\"it\"\u003e\n\u003chead\u003e\n  \u003cmeta charset\u003d\"utf-8\" /\u003e\n  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1, viewport-fit\u003dcover\" /\u003e\n  \u003ctitle\u003eCereal Food ‚Äì Etichette\u003c/title\u003e\n\n  \u003c!-- Tipograf√≠as --\u003e\n  \u003clink rel\u003d\"preconnect\" href\u003d\"https://fonts.gstatic.com\" crossorigin\u003e\n  \u003clink href\u003d\"https://fonts.googleapis.com/css2?family\u003dInter:wght@400;600;700\u0026family\u003dMontserrat:wght@700\u0026display\u003dswap\" rel\u003d\"stylesheet\"\u003e\n\n  \u003cstyle\u003e\n    :root{\n      /* Paleta */\n      --ink:#2F3A4A; --steel:#5B6675; --panel:#E8EDF2; --accent:#F4B400;\n      --radius:18px;\n    }\n    *{ box-sizing:border-box }\n    html,body{ height:100%; margin:0 }\n\n    body{\n      min-height: 100vh;\n      background-color: #1f2733;\n      /* ‚úÖ Fondo desde Drive (inyectado por doGet) */\n      background-image: url(\u0027\u003c?!\u003d bgDataUrl ?\u003e\u0027);\n      background-repeat: no-repeat;\n      background-position: center center;\n      background-size: cover;\n      background-attachment: fixed;\n      font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;\n    }\n\n    .lang{ position:fixed; top:10px; right:12px; color:rgba(255,255,255,.9); font-weight:600; letter-spacing:.04em; user-select:none; }\n\n    main{ min-height:100svh; display:flex; align-items:center; justify-content:center; padding:20px; }\n\n    .card{\n      width:min(560px,94vw);\n      background: color-mix(in oklab, var(--panel) 88%, white);\n      border-radius: var(--radius);\n      box-shadow: 0 16px 40px rgba(0,0,0,.18);\n      padding: 24px 22px;\n      border: 1px solid rgba(255,255,255,.5);\n      backdrop-filter: blur(4px);\n    }\n\n    h1{ margin:0 0 14px; text-align:center; font-family: Montserrat, Inter, system-ui; font-size:24px; letter-spacing:.04em; color:#203040; }\n\n    .label{ font-size:14px; color:var(--steel); margin-bottom:6px; }\n    .field{ margin:10px 0 12px; }\n\n    .input, select{\n      width:100%; height:44px; border-radius:12px;\n      border:1px solid #c7d0da; background:rgba(255,255,255,.95);\n      color:#0f172a; padding:0 14px; outline:none;\n      transition: box-shadow .15s, border-color .15s, background .15s;\n    }\n    .input::placeholder{ color:#8a99a7; }\n    .input:focus, select:focus{ border-color:#96a4b4; box-shadow:0 0 0 3px rgba(150,164,180,.25); background:#fff; }\n\n    .row{ display:flex; align-items:center; justify-content:space-between; gap:12px; margin:6px 0 12px; }\n    .remember{ display:flex; align-items:center; gap:8px; color:var(--steel); font-size:14px; }\n\n    .btn{ width:100%; height:46px; border:0; border-radius:12px; cursor:pointer; font-weight:700; letter-spacing:.02em; }\n    .btn-primary{ background:linear-gradient(180deg, #FFD14A, var(--accent)); color:#332200; box-shadow:0 8px 22px rgba(244,180,0,.35); }\n    .btn-primary:active{ transform: translateY(1px); }\n    .btn-ghost{ background:transparent; color:#475569; border:1px solid #d7e0e8; }\n\n    .links{ text-align:center; margin-top:12px; font-size:14px; color:#334155; }\n    .links a{ color:#334155; text-decoration:none; }\n    .links a:hover{ text-decoration:underline; }\n\n    .avatar{\n      width:68px;height:68px;border-radius:50%; margin:0 auto 10px auto;\n      background:radial-gradient(circle at 30% 30%, #fff, #dfe7ef);\n      display:grid; place-items:center; color:#6b7b8c; font-size:26px; border:1px solid rgba(255,255,255,.5);\n    }\n\n    .user-top{ text-align:center; font-weight:700; letter-spacing:.05em; color:#0f172a; margin-bottom:14px; }\n\n    .grid{ display:grid; grid-template-columns:1fr 1fr; gap:16px; }\n    .menu-btn{\n      display:flex; flex-direction:column; align-items:center; justify-content:center; gap:10px;\n      padding:18px 12px; min-height:110px;\n      background:linear-gradient(180deg, rgba(246,249,252,.95), rgba(234,241,246,.95));\n      border:1px solid rgba(255,255,255,.65);\n      border-radius:16px;\n      box-shadow: 0 12px 26px rgba(0,0,0,.18);\n      color:#1e293b; font-weight:700; text-align:center; cursor:pointer;\n      transition:transform .05s ease, background .2s ease;\n      backdrop-filter: blur(3px);\n    }\n    .menu-btn:active{ transform:translateY(1px); }\n    .menu-ico{ font-size:26px; opacity:.9; }\n    .menu-label{ font-size:15px; line-height:1.15; }\n\n    .logout{ margin-top:14px; text-align:center; }\n    .link-quiet{ color:#475569; text-decoration:none; font-size:14px; }\n    .link-quiet:hover{ text-decoration:underline; }\n\n    /* Modals */\n    .modal { position:fixed; inset:0; display:none; place-items:center; background:rgba(0,0,0,.35); padding:20px; z-index: 9999; }\n    .modal .card { max-width:520px; width:100%; }\n    .muted { color:#64748b; font-size:14px; }\n    .actions { display:flex; gap:10px; margin-top:10px; }\n    .muted-pre { font-size:.9rem; margin-top:8px; white-space:pre-line; }\n\n    /* Espec√≠ficos SCATOLA */\n    #modalScatola label { display:block; margin-top:8px; font-weight:600; }\n    #modalScatola input { width:100%; padding:10px; border:1px solid #ddd; border-radius:10px; }\n\n    .is-loading{ opacity:.7; pointer-events:none; }\n  \u003c/style\u003e\n\u003c/head\u003e\n\n\u003cbody\u003e\n  \u003cdiv class\u003d\"lang\"\u003eIT | \u003ca href\u003d\"#\" aria-label\u003d\"Espa√±ol\"\u003eES\u003c/a\u003e\u003c/div\u003e\n\n  \u003cmain\u003e\n    \u003c!-- LOGIN --\u003e\n    \u003cform class\u003d\"card\" id\u003d\"loginForm\" autocomplete\u003d\"on\"\u003e\n      \u003cdiv class\u003d\"avatar\" aria-hidden\u003d\"true\"\u003eüë§\u003c/div\u003e\n      \u003ch1\u003eUSER LOGIN\u003c/h1\u003e\n\n      \u003cdiv class\u003d\"field\"\u003e\n        \u003cdiv class\u003d\"label\"\u003eEmail\u003c/div\u003e\n        \u003cinput class\u003d\"input\" id\u003d\"login_email\" name\u003d\"email\" type\u003d\"email\" autocomplete\u003d\"username\" placeholder\u003d\"es. m.rossi@azienda.it\" required\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"field\"\u003e\n        \u003cdiv class\u003d\"label\"\u003ePassword\u003c/div\u003e\n        \u003cinput class\u003d\"input\" id\u003d\"login_password\" name\u003d\"password\" type\u003d\"password\" autocomplete\u003d\"current-password\" placeholder\u003d\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\" required\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"row\"\u003e\n        \u003clabel class\u003d\"remember\"\u003e\n          \u003cinput id\u003d\"login_remember\" type\u003d\"checkbox\"\u003e\n          \u003cspan\u003eRicordami\u003c/span\u003e\n        \u003c/label\u003e\n      \u003c/div\u003e\n\n      \u003cbutton class\u003d\"btn btn-primary\" type\u003d\"submit\"\u003eAccedi\u003c/button\u003e\n\n      \u003cdiv class\u003d\"links\"\u003e\n        \u003cdiv\u003e\u003ca href\u003d\"#\" id\u003d\"linkForgot\"\u003eHai dimenticato la password?\u003c/a\u003e\u003c/div\u003e\n        \u003cdiv style\u003d\"margin-top:6px\"\u003e\u003ca href\u003d\"#\" id\u003d\"linkRequestAccess\"\u003eRichiedi accesso\u003c/a\u003e\u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/form\u003e\n\n    \u003c!-- MEN√ô PRINCIPALE --\u003e\n    \u003csection class\u003d\"card\" id\u003d\"menuCard\" hidden\u003e\n      \u003cdiv class\u003d\"user-top\" id\u003d\"user_name_display\"\u003eESEQUIEL BALBASTRO\u003c/div\u003e\n\n      \u003cdiv class\u003d\"grid\"\u003e\n        \u003cbutton id\u003d\"btn_scatola\" class\u003d\"menu-btn\" type\u003d\"button\" aria-label\u003d\"Richiedi etichetta scatola\"\u003e\n          \u003cdiv class\u003d\"menu-ico\"\u003eüì¶\u003c/div\u003e\u003cdiv class\u003d\"menu-label\"\u003eRichiedi etichetta\u003cbr\u003escatola\u003c/div\u003e\n        \u003c/button\u003e\n\n        \u003cbutton id\u003d\"btn_scc\" class\u003d\"menu-btn\" type\u003d\"button\" aria-label\u003d\"Richiedi etichetta SCC\"\u003e\n          \u003cdiv class\u003d\"menu-ico\"\u003eüè∑Ô∏è\u003c/div\u003e\u003cdiv class\u003d\"menu-label\"\u003eRichiedi etichetta\u003cbr\u003eSCC\u003c/div\u003e\n        \u003c/button\u003e\n\n        \u003cbutton id\u003d\"btn_capoturno\" class\u003d\"menu-btn\" type\u003d\"button\" aria-label\u003d\"Richiedi Capoturno\"\u003e\n          \u003cdiv class\u003d\"menu-ico\"\u003eüë∑\u003c/div\u003e\u003cdiv class\u003d\"menu-label\"\u003eRichiedi\u003cbr\u003eCapoturno\u003c/div\u003e\n        \u003c/button\u003e\n\n        \u003cbutton id\u003d\"btn_foglio\" class\u003d\"menu-btn\" type\u003d\"button\" aria-label\u003d\"Foglio di produzione\"\u003e\n          \u003cdiv class\u003d\"menu-ico\"\u003eüìã\u003c/div\u003e\u003cdiv class\u003d\"menu-label\"\u003eFoglio di\u003cbr\u003eproduzione\u003c/div\u003e\n        \u003c/button\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"logout\"\u003e\u003ca href\u003d\"#\" id\u003d\"logout\" class\u003d\"link-quiet\"\u003eEsci\u003c/a\u003e\u003c/div\u003e\n    \u003c/section\u003e\n\n    \u003c!-- CREA ACCOUNT --\u003e\n    \u003csection class\u003d\"card\" id\u003d\"createAccountCard\" hidden\u003e\n      \u003ch1\u003eCREA ACCOUNT\u003c/h1\u003e\n\n      \u003cdiv class\u003d\"field\"\u003e\n        \u003cdiv class\u003d\"label\"\u003eNome\u003c/div\u003e\n        \u003cinput class\u003d\"input\" id\u003d\"ca_nome\" type\u003d\"text\" placeholder\u003d\"es. Maria\" required\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"field\"\u003e\n        \u003cdiv class\u003d\"label\"\u003eCognome\u003c/div\u003e\n        \u003cinput class\u003d\"input\" id\u003d\"ca_cognome\" type\u003d\"text\" placeholder\u003d\"es. Rossi\" required\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"field\"\u003e\n        \u003cdiv class\u003d\"label\"\u003eCapoturno / Squadra\u003c/div\u003e\n        \u003cselect id\u003d\"ca_squad_id\" required\u003e\n          \u003coption value\u003d\"\"\u003eSeleziona capoturno‚Ä¶\u003c/option\u003e\n        \u003c/select\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"field\"\u003e\n        \u003cdiv class\u003d\"label\"\u003eEmail\u003c/div\u003e\n        \u003cinput class\u003d\"input\" id\u003d\"ca_email\" type\u003d\"email\" placeholder\u003d\"es. maria.rossi@azienda.it\" required\u003e\n      \u003c/div\u003e\n\n      \u003cdiv class\u003d\"row\" style\u003d\"gap:10px\"\u003e\n        \u003cbutton class\u003d\"btn btn-primary\" id\u003d\"ca_submit\" type\u003d\"button\"\u003eCrea account\u003c/button\u003e\n        \u003cbutton class\u003d\"btn btn-ghost\" id\u003d\"ca_cancel\" type\u003d\"button\"\u003eAnnulla\u003c/button\u003e\n      \u003c/div\u003e\n    \u003c/section\u003e\n\n    \u003c!-- Modal: Forgot Password --\u003e\n    \u003cdiv id\u003d\"modalForgot\" class\u003d\"modal\" aria-hidden\u003d\"true\"\u003e\n      \u003cdiv class\u003d\"card\"\u003e\n        \u003ch3\u003eRecupero password\u003c/h3\u003e\n        \u003cdiv class\u003d\"field\"\u003e\n          \u003cdiv class\u003d\"label\"\u003eEmail\u003c/div\u003e\n          \u003cinput id\u003d\"forgotEmail\" class\u003d\"input\" type\u003d\"email\" required /\u003e\n        \u003c/div\u003e\n        \u003cdiv class\u003d\"actions\"\u003e\n          \u003cbutton id\u003d\"btnForgotSend\" class\u003d\"btn btn-primary\" type\u003d\"button\"\u003eInvia\u003c/button\u003e\n          \u003cbutton id\u003d\"btnForgotClose\" class\u003d\"btn btn-ghost\" type\u003d\"button\"\u003eChiudi\u003c/button\u003e\n        \u003c/div\u003e\n        \u003cp id\u003d\"forgotMsg\" class\u003d\"muted\"\u003e\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003c!-- Modal: Richiedi etichetta SCATOLA --\u003e\n    \u003cdiv id\u003d\"modalScatola\" class\u003d\"modal\" aria-hidden\u003d\"true\"\u003e\n      \u003cdiv class\u003d\"card\"\u003e\n        \u003ch3\u003eRichiedi etichetta scatola\u003c/h3\u003e\n\n        \u003c!-- NUEVO: selector de destinatario --\u003e\n        \u003cdiv class\u003d\"field\"\u003e\n          \u003cdiv class\u003d\"label\"\u003eInviare a\u003c/div\u003e\n          \u003cselect id\u003d\"scTarget\" required\u003e\n            \u003coption value\u003d\"CAPOTURNO\"\u003eCapoturno\u003c/option\u003e\n            \u003coption value\u003d\"VICE\"\u003eVice capoturno\u003c/option\u003e\n          \u003c/select\u003e\n        \u003c/div\u003e\n\n        \u003cdiv class\u003d\"field\"\u003e\n          \u003cdiv class\u003d\"label\"\u003eCliente\u003c/div\u003e\n          \u003cinput id\u003d\"scCliente\" class\u003d\"input\" list\u003d\"clientiList\" placeholder\u003d\"Digita per cercare‚Ä¶\" autocomplete\u003d\"off\" required /\u003e\n          \u003cdatalist id\u003d\"clientiList\"\u003e\u003c/datalist\u003e\n        \u003c/div\u003e\n\n        \u003cdiv class\u003d\"field\"\u003e\n          \u003cdiv class\u003d\"label\"\u003eLinea\u003c/div\u003e\n          \u003cinput id\u003d\"scLinea\" type\u003d\"text\" class\u003d\"input\" placeholder\u003d\"Es. L4\" required /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv class\u003d\"field\"\u003e\n          \u003cdiv class\u003d\"label\"\u003eQuantit√†\u003c/div\u003e\n          \u003cinput id\u003d\"scQuantita\" type\u003d\"number\" class\u003d\"input\" min\u003d\"1\" step\u003d\"1\" required /\u003e\n        \u003c/div\u003e\n\n        \u003cdiv class\u003d\"actions\"\u003e\n          \u003cbutton id\u003d\"btnScChiudi\" class\u003d\"btn btn-ghost\" type\u003d\"button\"\u003eChiudi\u003c/button\u003e\n          \u003cbutton id\u003d\"btnScInvia\" class\u003d\"btn btn-primary\" type\u003d\"button\"\u003eInvia richiesta\u003c/button\u003e\n        \u003c/div\u003e\n\n        \u003cpre id\u003d\"scMsg\" class\u003d\"muted-pre\"\u003e\u003c/pre\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/main\u003e\n\n  \u003c!-- Footer --\u003e\n  \u003cfooter\u003eCEREAL FOOD\u003c/footer\u003e\n\n  \u003c!-- Inserta el bloque de NOTIFICACIONES (parcial) --\u003e\n  \u003c?!\u003d HtmlService.createHtmlOutputFromFile(\u0027notifications\u0027).getContent(); ?\u003e\n\n  \u003c!-- JS principal (sin l√≥gica de notificaciones) --\u003e\n  \u003cscript\u003e\n    // Helpers UI\n    function show(el){ el.style.display \u003d \u0027grid\u0027; el.setAttribute(\u0027aria-hidden\u0027,\u0027false\u0027); }\n    function hide(el){ el.style.display \u003d \u0027none\u0027; el.setAttribute(\u0027aria-hidden\u0027,\u0027true\u0027); }\n    function disable(el){ el.disabled \u003d true; el.classList.add(\u0027is-loading\u0027); }\n    function enable(el){ el.disabled \u003d false; el.classList.remove(\u0027is-loading\u0027); }\n\n    // Exponer SID global si estaba guardado (persistencia opcional)\n    (function restoreSid(){\n      try{\n        const saved \u003d sessionStorage.getItem(\u0027CF_SID\u0027) || localStorage.getItem(\u0027CF_SID\u0027) || \u0027\u0027;\n        if (saved) window.CF_SID \u003d saved;\n      }catch(_){}\n    })();\n\n    document.addEventListener(\u0027DOMContentLoaded\u0027, function(){\n      // Refs base\n      const form \u003d document.getElementById(\u0027loginForm\u0027);\n      const menuCard \u003d document.getElementById(\u0027menuCard\u0027);\n      const loginEmail \u003d document.getElementById(\u0027login_email\u0027);\n      const loginPass \u003d document.getElementById(\u0027login_password\u0027);\n      const remember \u003d document.getElementById(\u0027login_remember\u0027);\n      const userNameDisplay \u003d document.getElementById(\u0027user_name_display\u0027);\n\n      const createCard \u003d document.getElementById(\u0027createAccountCard\u0027);\n      const ca_nome \u003d document.getElementById(\u0027ca_nome\u0027);\n      const ca_cognome \u003d document.getElementById(\u0027ca_cognome\u0027);\n      const ca_squad_id \u003d document.getElementById(\u0027ca_squad_id\u0027);\n      const ca_email \u003d document.getElementById(\u0027ca_email\u0027);\n      const ca_submit \u003d document.getElementById(\u0027ca_submit\u0027);\n      const ca_cancel \u003d document.getElementById(\u0027ca_cancel\u0027);\n\n      const linkForgot \u003d document.getElementById(\u0027linkForgot\u0027);\n      const linkRequestAccess \u003d document.getElementById(\u0027linkRequestAccess\u0027);\n      const modalForgot \u003d document.getElementById(\u0027modalForgot\u0027);\n      const btnForgotSend \u003d document.getElementById(\u0027btnForgotSend\u0027);\n      const btnForgotClose \u003d document.getElementById(\u0027btnForgotClose\u0027);\n      const forgotEmail \u003d document.getElementById(\u0027forgotEmail\u0027);\n      const forgotMsg \u003d document.getElementById(\u0027forgotMsg\u0027);\n\n      // Modal SCATOLA\n      const btnScatola \u003d document.getElementById(\u0027btn_scatola\u0027);\n      const modalScatola \u003d document.getElementById(\u0027modalScatola\u0027);\n      const btnScChiudi \u003d document.getElementById(\u0027btnScChiudi\u0027);\n      const btnScInvia \u003d document.getElementById(\u0027btnScInvia\u0027);\n      const scTarget \u003d document.getElementById(\u0027scTarget\u0027);      // \u003c-- NUEVO\n      const scCliente \u003d document.getElementById(\u0027scCliente\u0027);\n      const scLinea \u003d document.getElementById(\u0027scLinea\u0027);\n      const scQuantita \u003d document.getElementById(\u0027scQuantita\u0027);\n      const scMsg \u003d document.getElementById(\u0027scMsg\u0027);\n\n      // ---------- CLIENTI (datalist) ----------\n      let clientiCache \u003d [];\n      let clientiIndexByName \u003d Object.create(null);\n\n      function loadClientiIntoDatalist_(inputEl, datalistId){\n        const dl \u003d document.getElementById(datalistId);\n        dl.innerHTML \u003d \u0027\u0027;\n        const optLoading \u003d document.createElement(\u0027option\u0027);\n        optLoading.value \u003d \u0027\u0027;\n        optLoading.label \u003d \u0027Caricamento clienti‚Ä¶\u0027;\n        dl.appendChild(optLoading);\n\n        google.script.run\n          .withSuccessHandler(function(list){\n            clientiCache \u003d Array.isArray(list) ? list : [];\n            clientiIndexByName \u003d Object.create(null);\n            dl.innerHTML \u003d \u0027\u0027;\n            clientiCache.forEach(c \u003d\u003e {\n              const name \u003d (c.cliente_name || \u0027\u0027).trim();\n              if (!name) return;\n              const opt \u003d document.createElement(\u0027option\u0027);\n              opt.value \u003d name;\n              dl.appendChild(opt);\n              clientiIndexByName[name.toLowerCase()] \u003d c;\n            });\n          })\n          .withFailureHandler(function(err){\n            dl.innerHTML \u003d \u0027\u0027;\n            const optErr \u003d document.createElement(\u0027option\u0027);\n            optErr.value \u003d \u0027\u0027;\n            optErr.label \u003d \u0027Errore caricando clienti\u0027;\n            dl.appendChild(optErr);\n            console.error(\u0027listClienti error:\u0027, (err \u0026\u0026 err.message) || err);\n          })\n          .listClienti();\n      }\n\n      function buildScPayloadValidated(){\n        const typed \u003d (scCliente.value || \u0027\u0027).trim();\n        const match \u003d clientiIndexByName[typed.toLowerCase()] || null;\n        if (!match) throw new Error(\u0027Seleziona un cliente valido dalla lista.\u0027);\n        const linea \u003d (scLinea.value || \u0027\u0027).trim();\n        const q \u003d parseInt(scQuantita.value, 10);\n        return { type: \u0027SCATOLA\u0027, cliente: match.cliente_name, linea: linea, quantita: Number.isFinite(q) ? q : 0 };\n      }\n\n      // Abrir modal SCATOLA ‚Üí recarga lista\n      btnScatola.addEventListener(\u0027click\u0027, ()\u003d\u003e{\n        if (scTarget) scTarget.value \u003d \u0027CAPOTURNO\u0027;\n        scCliente.value \u003d \u0027\u0027;\n        scLinea.value \u003d \u0027\u0027;\n        scQuantita.value \u003d \u0027\u0027;\n        scMsg.textContent \u003d \u0027\u0027;\n        loadClientiIntoDatalist_(scCliente, \u0027clientiList\u0027);\n        show(modalScatola);\n      });\n      btnScChiudi.addEventListener(\u0027click\u0027, ()\u003d\u003e hide(modalScatola));\n\n      btnScInvia.addEventListener(\u0027click\u0027, ()\u003d\u003e{\n        let payload;\n        try{\n          payload \u003d buildScPayloadValidated();\n        } catch(e){\n          scMsg.style.color \u003d \u0027#b00\u0027;\n          scMsg.textContent \u003d e.message || \u0027Cliente non valido.\u0027;\n          return;\n        }\n        if (!payload.linea || !payload.quantita || payload.quantita \u003c\u003d 0){\n          scMsg.style.color \u003d \u0027#b00\u0027;\n          scMsg.textContent \u003d \u0027Completa Linea e una Quantit√† \u003e 0.\u0027;\n          return;\n        }\n\n        // NUEVO: target y SID\n        const targetSel \u003d (scTarget \u0026\u0026 scTarget.value ? scTarget.value : \u0027CAPOTURNO\u0027).toUpperCase();\n        payload.approver_target \u003d targetSel;\n\n        const sid \u003d (window \u0026\u0026 window.CF_SID) || \u0027\u0027;\n\n        disable(btnScInvia);\n        scMsg.style.color \u003d \u0027#0a0\u0027;\n        scMsg.textContent \u003d \u0027Invio in corso...\\n\u0027 + JSON.stringify(payload, null, 2);\n\n        google.script.run\n          .withSuccessHandler(function(res){\n            enable(btnScInvia);\n            if (res \u0026\u0026 res.ok){\n              scMsg.style.color \u003d \u0027#0a0\u0027;\n              scMsg.textContent \u003d (res.message || \u0027Richiesta inviata.\u0027) + \u0027\\n\u0027 + JSON.stringify(payload, null, 2);\n            } else {\n              scMsg.style.color \u003d \u0027#b00\u0027;\n              scMsg.textContent \u003d (res \u0026\u0026 res.message) || \u0027Errore imprevisto.\u0027;\n            }\n          })\n          .withFailureHandler(function(err){\n            enable(btnScInvia);\n            scMsg.style.color \u003d \u0027#b00\u0027;\n            scMsg.textContent \u003d \u0027Errore: \u0027 + ((err \u0026\u0026 err.message) || err);\n          })\n          .api_requestsCreateOrSendV2(payload, sid);\n      });\n\n      // ---------- Recordatorio nombre ----------\n      const remembered \u003d localStorage.getItem(\u0027cf_user\u0027) || \u0027\u0027;\n      if (remembered) userNameDisplay.textContent \u003d remembered.toUpperCase();\n\n      // ---------- LOGIN ----------\n      form.addEventListener(\u0027submit\u0027, (e)\u003d\u003e{\n        e.preventDefault();\n        const email \u003d (loginEmail.value||\u0027\u0027).trim();\n        const pwd \u003d (loginPass.value||\u0027\u0027).trim();\n        if (!email || !pwd) { alert(\u0027Inserisci email e password\u0027); return; }\n\n        google.script.run\n          .withSuccessHandler((res)\u003d\u003e{\n            if (!res || !res.ok) {\n              alert(res \u0026\u0026 res.msg ? res.msg : \u0027Accesso negato\u0027);\n              return;\n            }\n            // Guardar SID de sesi√≥n\n            window.CF_SID \u003d res.sid || \u0027\u0027;\n            try{\n              sessionStorage.setItem(\u0027CF_SID\u0027, window.CF_SID);\n            }catch(_){}\n\n            const display \u003d (res.display_name||email).toUpperCase();\n            if (remember.checked) localStorage.setItem(\u0027cf_user\u0027, display);\n            else localStorage.removeItem(\u0027cf_user\u0027);\n\n            userNameDisplay.textContent \u003d display;\n            form.hidden \u003d true;\n            createCard.hidden \u003d true;\n            hide(modalForgot);\n            menuCard.hidden \u003d false;\n\n            // Inicia/Detiene notificaciones seg√∫n rol (usa API global expuesta por notifications.html)\n            if ([\u0027R001\u0027,\u0027R002\u0027,\u0027R003\u0027].includes(res.role_id)) { window.Notif \u0026\u0026 window.Notif.start(); }\n            else { window.Notif \u0026\u0026 window.Notif.stop(); }\n          })\n          .withFailureHandler(err \u003d\u003e alert(\u0027Errore login: \u0027 + ((err \u0026\u0026 err.message) || err)))\n          .loginV2(email, pwd); // \u003c-- NUEVO: login V2 con SID\n      });\n\n      // ---------- Logout ----------\n      document.getElementById(\u0027logout\u0027).addEventListener(\u0027click\u0027, (e)\u003d\u003e{\n        e.preventDefault();\n        window.Notif \u0026\u0026 window.Notif.stop();\n        try{\n          sessionStorage.removeItem(\u0027CF_SID\u0027);\n        }catch(_){}\n        menuCard.hidden \u003d true;\n        createCard.hidden \u003d true;\n        form.hidden \u003d false;\n      });\n\n      // ---------- Abrir ‚ÄúCrea account‚Äù ----------\n      linkRequestAccess.addEventListener(\u0027click\u0027, (e)\u003d\u003e{\n        e.preventDefault();\n        form.hidden \u003d true;\n        menuCard.hidden \u003d true;\n        createCard.hidden \u003d false;\n\n        ca_squad_id.innerHTML \u003d \u0027\u003coption value\u003d\"\"\u003eSeleziona capoturno‚Ä¶\u003c/option\u003e\u0027;\n\n        google.script.run\n          .withSuccessHandler((list)\u003d\u003e{\n            (list||[]).forEach(s\u003d\u003e{\n              const opt \u003d document.createElement(\u0027option\u0027);\n              opt.value \u003d s.squad_id;\n              opt.textContent \u003d `${s.squad_name} ‚Äî ${s.capo_name||\u0027\u0027}`;\n              ca_squad_id.appendChild(opt);\n            });\n          })\n          .withFailureHandler(err \u003d\u003e alert(\u0027Errore caricando capoturni: \u0027 + ((err \u0026\u0026 err.message) || err)))\n          .listCapoturni();\n      });\n\n      // ---------- Crear account ----------\n      ca_submit.addEventListener(\u0027click\u0027, ()\u003d\u003e{\n        const nome \u003d ca_nome.value.trim();\n        const cognome \u003d ca_cognome.value.trim();\n        const squad_id \u003d ca_squad_id.value;\n        const email \u003d ca_email.value.trim();\n        if (!nome || !cognome || !squad_id || !email) {\n          alert(\u0027Completa Nome, Cognome, Email e Capoturno / Squadra\u0027);\n          return;\n        }\n        disable(ca_submit);\n        ca_submit.textContent \u003d \u0027Creazione‚Ä¶\u0027;\n\n        const payload \u003d { nome, cognome, squad_id, email };\n\n        google.script.run\n          .withSuccessHandler((res)\u003d\u003e{\n            enable(ca_submit);\n            ca_submit.textContent \u003d \u0027Crea account\u0027;\n            if (res \u0026\u0026 res.ok) {\n              const fullName \u003d `${nome} ${cognome}`.toUpperCase();\n              localStorage.setItem(\u0027cf_user\u0027, fullName);\n              userNameDisplay.textContent \u003d fullName;\n              createCard.hidden \u003d true;\n              menuCard.hidden \u003d false;\n              const msg \u003d res.email_sent ? \u0027Account creato e email inviata.\u0027 : `Account creato. (Email non inviata: ${res.error||\u0027‚Äî\u0027})`;\n              alert(msg);\n            } else {\n              alert(\u0027Errore creando il profilo.\u0027);\n            }\n          })\n          .withFailureHandler(err \u003d\u003e {\n            enable(ca_submit);\n            ca_submit.textContent \u003d \u0027Crea account\u0027;\n            const emsg \u003d (err \u0026\u0026 err.message) || String(err || \u0027\u0027);\n            if (emsg.includes(\u0027Email gi√† registrata\u0027)) {\n              if (confirm(\u0027Email gi√† registrata. Vuoi reimpostare la password e inviare nuove credenziali a questo indirizzo?\u0027)) {\n                google.script.run\n                  .withSuccessHandler(res \u003d\u003e {\n                    alert(res.email_sent ? \u0027Password reimpostata e email inviata.\u0027 : \u0027Password reimpostata ma email non inviata: \u0027 + (res.error || \u0027‚Äî\u0027));\n                  })\n                  .withFailureHandler(e2 \u003d\u003e alert(\u0027Errore nel reset della password: \u0027 + ((e2 \u0026\u0026 e2.message) || e2)))\n                  .resetPassword(email);\n              }\n              return;\n            }\n            alert(\u0027Errore creando account: \u0027 + emsg);\n          })\n          .createOperator(payload);\n      });\n\n      ca_cancel.addEventListener(\u0027click\u0027, ()\u003d\u003e{\n        createCard.hidden \u003d true;\n        form.hidden \u003d false;\n      });\n\n      // ---------- Forgot password ----------\n      linkForgot.addEventListener(\u0027click\u0027, (e)\u003d\u003e{\n        e.preventDefault();\n        forgotEmail.value \u003d (loginEmail.value||\u0027\u0027).trim();\n        forgotMsg.textContent \u003d \u0027\u0027;\n        show(modalForgot);\n      });\n      btnForgotClose.addEventListener(\u0027click\u0027, ()\u003d\u003e hide(modalForgot));\n      btnForgotSend.addEventListener(\u0027click\u0027, ()\u003d\u003e{\n        const email \u003d (forgotEmail.value||\u0027\u0027).trim();\n        if (!email) {\n          forgotMsg.textContent \u003d \u0027Inserisci una email valida.\u0027;\n          forgotMsg.style.color \u003d \u0027#b00\u0027;\n          return;\n        }\n        disable(btnForgotSend);\n        forgotMsg.textContent \u003d \u0027Invio in corso...\u0027;\n        forgotMsg.style.color \u003d \u0027#0a0\u0027;\n\n        google.script.run\n          .withSuccessHandler((res)\u003d\u003e{\n            enable(btnForgotSend);\n            if (res \u0026\u0026 res.ok) {\n              forgotMsg.textContent \u003d \u0027Email inviata con le istruzioni.\u0027;\n              forgotMsg.style.color \u003d \u0027#0a0\u0027;\n            } else {\n              forgotMsg.textContent \u003d (res \u0026\u0026 res.message) || \u0027Impossibile inviare.\u0027;\n              forgotMsg.style.color \u003d \u0027#b00\u0027;\n            }\n          })\n          .withFailureHandler(err\u003d\u003e{\n            enable(btnForgotSend);\n            forgotMsg.textContent \u003d \u0027Errore: \u0027 + ((err \u0026\u0026 err.message) || err);\n            forgotMsg.style.color \u003d \u0027#b00\u0027;\n          })\n          .resetPassword(email);\n      });\n    });\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c?!\u003d HtmlService.createHtmlOutputFromFile(\u0027capoturno\u0027).getContent(); ?\u003e\n\u003c/html\u003e\n"},{"id":"2411127d-91b0-4194-913f-efd22c3248ba","name":"db_core","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BASE DE DATOS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction getDb_() {\n  const props \u003d PropertiesService.getScriptProperties();\n  let id \u003d props.getProperty(PROP_DB_ID);\n  let ss;\n  if (id) {\n    ss \u003d SpreadsheetApp.openById(id);\n  } else {\n    ss \u003d SpreadsheetApp.create(DB_NAME);\n    props.setProperty(PROP_DB_ID, ss.getId());\n  }\n  return ss;\n}\n\nfunction getOrCreateSheet_(ss, name, header) {\n  let sh \u003d ss.getSheetByName(name);\n  if (!sh) {\n    sh \u003d ss.insertSheet(name);\n    sh.appendRow(header);\n  } else {\n    // Normaliza headers si faltan columnas\n    const lastCol \u003d sh.getLastColumn();\n    if (lastCol \u003c header.length) {\n      const existing \u003d sh.getRange(1, 1, 1, lastCol).getValues()[0];\n      for (let i \u003d lastCol; i \u003c header.length; i++) existing.push(header[i]);\n      sh.getRange(1, 1, 1, header.length).setValues([existing]);\n    }\n  }\n  return sh;\n}\n\nfunction ensureUsers_() {\n  const ss \u003d getDb_();\n  return getOrCreateSheet_(ss, \u0027USERS\u0027, [\n    \u0027user_id\u0027,\u0027nome\u0027,\u0027cognome\u0027,\u0027email\u0027,\u0027role_id\u0027,\u0027squad_id\u0027,\u0027is_active\u0027,\u0027created_at\u0027,\u0027password_hash\u0027\n  ]);\n}\nfunction ensureSquads_() {\n  const ss \u003d getDb_();\n  return getOrCreateSheet_(ss, \u0027SQUADS\u0027, [\n    \u0027squad_id\u0027,\u0027squad_name\u0027,\u0027capo_name\u0027,\u0027vice_name\u0027,\u0027capo_email\u0027,\u0027vice_email\u0027\n  ]);\n}\nfunction ensureRequests_(){\n  const ss \u003d getDb_();\n  return getOrCreateSheet_(ss, \u0027REQUESTS\u0027, [\n    \u0027request_id\u0027,\u0027created_at\u0027,\u0027created_by_user_id\u0027,\u0027squad_id\u0027,\n    \u0027type\u0027,\u0027cliente\u0027,\u0027codice\u0027,\u0027quantita\u0027,\u0027linea\u0027,\u0027note\u0027,\n    \u0027status\u0027,\u0027approved_by_user_id\u0027,\u0027approved_at\u0027,\u0027rejection_comment\u0027,\n    \u0027make_webhook_status\u0027,\u0027make_webhook_attempts\u0027,\u0027make_webhook_last_error\u0027,\n    \u0027payload_json\u0027\n  ]);\n}\nfunction ensureClienti_(){\n  const ss \u003d getDb_();\n  return getOrCreateSheet_(ss, \u0027CLIENTI\u0027, [\n    \u0027cliente_id\u0027,\u0027cliente_name\u0027,\u0027is_active\u0027,\u0027created_at\u0027\n  ]);\n}\nfunction ensureUsersSchema_() {\n  const sh \u003d ensureUsers_();\n  const lastCol \u003d Math.max(sh.getLastColumn(), 1);\n  const header \u003d sh.getRange(1,1,1,lastCol).getValues()[0];\n  const needCols \u003d [\u0027user_id\u0027,\u0027nome\u0027,\u0027cognome\u0027,\u0027email\u0027,\u0027role_id\u0027,\u0027squad_id\u0027,\u0027is_active\u0027,\u0027created_at\u0027,\u0027password_hash\u0027];\n  needCols.forEach(col \u003d\u003e {\n    if (!header.includes(col)) {\n      sh.insertColumnAfter(sh.getLastColumn());\n      sh.getRange(1, sh.getLastColumn(), 1, 1).setValue(col);\n    }\n  });\n}\n"},{"id":"c27f2c3c-ac86-4b2b-8e92-a46804f58d56","name":"auth_session","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AUTH / EMAIL / SESI√ìN \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction hashPassword_(plain, email) {\n  const bytes \u003d Utilities.computeDigest(Utilities.DigestAlgorithm.SHA_256, (plain||\u0027\u0027) + \u0027|\u0027 + (email || \u0027\u0027));\n  return Utilities.base64Encode(bytes);\n}\nfunction generatePassword_(len) {\n  const chars \u003d \u0027ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789@$!%*?\u0026\u0027;\n  let out \u003d \u0027\u0027;\n  for (let i \u003d 0; i \u003c (len||10); i++) out +\u003d chars.charAt(Math.floor(Math.random()*chars.length));\n  return out;\n}\nfunction sendWelcomeEmail_(to, displayName, email, password) {\n  const subject \u003d \u0027Benvenuto ‚Äì Cereal Food WebApp\u0027;\n  const link \u003d ScriptApp.getService().getUrl();\n  const body \u003d\n    \u0027Ciao \u0027 + (displayName || \u0027\u0027) + \u0027\\n\\n\u0027 +\n    \u0027Il tuo account √® stato creato. Puoi accedere con:\\n\u0027 +\n    \u0027Email: \u0027 + email + \u0027\\n\u0027 +\n    \u0027Password: \u0027 + password + \u0027\\n\\n\u0027 +\n    \u0027Link: \u0027 + link + \u0027\\n\\n\u0027 +\n    \u0027Per sicurezza, cambia la password dopo il primo accesso.\u0027;\n  GmailApp.sendEmail(to, subject, body, {name: \u0027Cereal Food ‚Äì Etichette\u0027});\n}\n\nfunction findUserByEmail_(email) {\n  const sh \u003d ensureUsers_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const iEmail \u003d head.indexOf(\u0027email\u0027);\n  for (let r \u003d 1; r \u003c data.length; r++) {\n    if ((data[r][iEmail]||\u0027\u0027).toString().trim().toLowerCase() \u003d\u003d\u003d (email||\u0027\u0027).toLowerCase()) {\n      return { row: r+1, rowData: data[r], header: head };\n    }\n  }\n  return null;\n}\n\n/** Sesi√≥n m√≠nima: guarda email en UserProperties al hacer login */\nfunction setCurrentUserEmail_(email){\n  PropertiesService.getUserProperties().setProperty(\u0027CURRENT_EMAIL\u0027, String(email||\u0027\u0027).trim());\n}\nfunction getCurrentUser_(){\n  const email \u003d (PropertiesService.getUserProperties().getProperty(\u0027CURRENT_EMAIL\u0027) || \u0027\u0027).trim();\n  if (!email) throw new Error(\u0027Utente non autenticato (sessione vuota).\u0027);\n  const found \u003d findUserByEmail_(email);\n  if (!found) throw new Error(\u0027Utente non trovato: \u0027 + email);\n\n  const head \u003d found.header;\n  const row  \u003d found.rowData;\n  const obj \u003d {};\n  head.forEach((k, idx) \u003d\u003e obj[k] \u003d row[idx]);\n  obj.is_active \u003d String(obj.is_active).toLowerCase() \u003d\u003d\u003d \u0027true\u0027; // normaliza booleano\n  return obj; // { user_id, nome, cognome, email, role_id, squad_id, is_active, ... }\n}\n\n/* \u003d\u003d\u003d\u003d\u003d Registro operador (Richiedi accesso) \u003d\u003d\u003d\u003d\u003d */\nfunction createOperator(form) {\n  ensureUsersSchema_();\n  const sh \u003d ensureUsers_();\n\n  const nome \u003d (form \u0026\u0026 form.nome || \u0027\u0027).trim();\n  const cognome \u003d (form \u0026\u0026 form.cognome || \u0027\u0027).trim();\n  const email \u003d (form \u0026\u0026 form.email || \u0027\u0027).trim();\n  const squad_id \u003d (form \u0026\u0026 form.squad_id || \u0027\u0027).trim();\n\n  if (!nome || !cognome || !email || !squad_id) {\n    throw new Error(\u0027Dati obbligatori mancanti (Nome, Cognome, Email, Squadra)\u0027);\n  }\n\n  const existing \u003d findUserByEmail_(email);\n  if (existing) throw new Error(\u0027Email gi√† registrata\u0027);\n\n  const user_id \u003d \u0027U\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n  const password \u003d generatePassword_(10);\n  const pHash \u003d hashPassword_(password, email);\n  const row \u003d [ user_id, nome, cognome, email, \u0027R004\u0027, squad_id, true, new Date(), pHash ];\n  sh.appendRow(row);\n\n  const displayName \u003d (nome + \u0027 \u0027 + cognome).trim();\n  try {\n    sendWelcomeEmail_(email, displayName, email, password);\n    return { ok: true, user_id, email_sent: true };\n  } catch (e) {\n    return { ok: true, user_id, email_sent: false, error: e \u0026\u0026 e.message };\n  }\n}\n\n/* \u003d\u003d\u003d\u003d\u003d Login / Reset \u003d\u003d\u003d\u003d\u003d */\nfunction login(email, password) {\n  ensureUsersSchema_();\n  const sh \u003d ensureUsers_();\n  const data \u003d sh.getDataRange().getValues();\n  if (data.length \u003c\u003d 1) return { ok:false, msg:\u0027Nessun utente\u0027 };\n\n  const head \u003d data[0];\n  const iEmail \u003d head.indexOf(\u0027email\u0027);\n  const iNome \u003d head.indexOf(\u0027nome\u0027);\n  const iCognome \u003d head.indexOf(\u0027cognome\u0027);\n  const iHash \u003d head.indexOf(\u0027password_hash\u0027);\n  const iActive \u003d head.indexOf(\u0027is_active\u0027);\n  const iRole \u003d head.indexOf(\u0027role_id\u0027);\n  const iSquad \u003d head.indexOf(\u0027squad_id\u0027);\n\n  const target \u003d data.find((r, idx) \u003d\u003e idx\u003e0 \u0026\u0026 (r[iEmail]||\u0027\u0027).toString().toLowerCase() \u003d\u003d\u003d (email||\u0027\u0027).toLowerCase());\n  if (!target) return { ok:false, msg:\u0027Utente non trovato\u0027 };\n  if (String(target[iActive]).toLowerCase() !\u003d\u003d \u0027true\u0027) return { ok:false, msg:\u0027Utente disabilitato\u0027 };\n\n  const expected \u003d target[iHash];\n  const given \u003d hashPassword_(password||\u0027\u0027, email||\u0027\u0027);\n  if (expected !\u003d\u003d given) return { ok:false, msg:\u0027Password errata\u0027 };\n\n  const display \u003d ((target[iNome]||\u0027\u0027) + \u0027 \u0027 + (target[iCognome]||\u0027\u0027)).trim() || email;\n  setCurrentUserEmail_(email);\n  return { ok:true, display_name: display, role_id: target[iRole], squad_id: target[iSquad] };\n}\n\nfunction resetPassword(email) {\n  if (!email) throw new Error(\u0027Email obbligatoria\u0027);\n  ensureUsersSchema_();\n  const found \u003d findUserByEmail_(email);\n  if (!found) throw new Error(\u0027Utente non trovato\u0027);\n\n  const iActive \u003d found.header.indexOf(\u0027is_active\u0027);\n  if (String(found.rowData[iActive]).toLowerCase() !\u003d\u003d \u0027true\u0027) throw new Error(\u0027Utente disabilitato\u0027);\n\n  const newPwd \u003d generatePassword_(10);\n  const newHash \u003d hashPassword_(newPwd, email);\n  const iHash \u003d found.header.indexOf(\u0027password_hash\u0027);\n  const sh \u003d ensureUsers_();\n  sh.getRange(found.row, iHash + 1).setValue(newHash);\n\n  const iNome \u003d found.header.indexOf(\u0027nome\u0027);\n  const iCognome \u003d found.header.indexOf(\u0027cognome\u0027);\n  const display \u003d ((found.rowData[iNome]||\u0027\u0027) + \u0027 \u0027 + (found.rowData[iCognome]||\u0027\u0027)).trim() || email;\n\n  try {\n    sendWelcomeEmail_(email, display, email, newPwd);\n    return { ok:true, email_sent:true };\n  } catch(e) {\n    return { ok:true, email_sent:false, error: e \u0026\u0026 e.message };\n  }\n}\n"},{"id":"8c4b1720-f085-434f-82df-8f5d91af2643","name":"requests_flow","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SOLICITUDES / ENV√çO A MAKE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction sendToMake_(payload){\n  try{\n    const url \u003d getProp_(\u0027MAKE_APPROVAL_WEBHOOK_URL\u0027); // Script Properties\n    if (!url) return { ok:false, message:\u0027Falta MAKE_APPROVAL_WEBHOOK_URL.\u0027 };\n\n    const res \u003d UrlFetchApp.fetch(url, {\n      method: \u0027post\u0027,\n      contentType: \u0027application/json\u0027,\n      payload: JSON.stringify(payload),\n      muteHttpExceptions: true\n    });\n    const code \u003d res.getResponseCode();\n    const text \u003d res.getContentText();\n    if (code \u003e\u003d 200 \u0026\u0026 code \u003c 300) return { ok:true, code, text };\n    return { ok:false, message:\u0027HTTP \u0027 + code + \u0027 ‚Äì \u0027 + text, code, text };\n  } catch(e){\n    return { ok:false, message:e.message };\n  }\n}\n\nfunction createPendingRequest_(payload){\n  const sh \u003d ensureRequests_();\n  const reqId \u003d \u0027REQ-\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n  const row \u003d [\n    reqId, payload.created_at, payload.created_by_user_id, payload.squad_id,\n    payload.type, payload.cliente, \u0027\u0027, payload.quantita, payload.linea, (payload.note||\u0027\u0027),\n    \u0027PENDIENTE\u0027, \u0027\u0027, \u0027\u0027, \u0027\u0027,\n    \u0027N/A\u0027, 0, \u0027\u0027,\n    JSON.stringify(payload)\n  ];\n  sh.appendRow(row);\n  return reqId;\n}\n\n/**\n * Endpoint principal llamado desde el front:\n * body \u003d { type:\u0027SCATOLA\u0027, cliente, linea, quantita, note? }\n * JEFE/CAPOTURNO/VICE \u003d\u003e env√≠o directo a Make (sin aprobaci√≥n).\n */\nfunction api_requestsCreateOrSend(body){\n  try{\n    const user \u003d getCurrentUser_(); // de UserProperties (login)\n    if (!user || !user.is_active) return { ok:false, message:\u0027Utente non attivo.\u0027 };\n\n    // VALIDACIONES\n    const type \u003d String(body \u0026\u0026 body.type || \u0027\u0027).trim().toUpperCase();\n    const cliente \u003d (body \u0026\u0026 body.cliente || \u0027\u0027).trim();\n    const linea   \u003d (body \u0026\u0026 body.linea   || \u0027\u0027).trim();\n    const quantita \u003d parseInt(body \u0026\u0026 body.quantita, 10);\n    const note    \u003d (body \u0026\u0026 body.note    || \u0027\u0027).trim();\n\n    if (type !\u003d\u003d \u0027SCATOLA\u0027) return { ok:false, message:\u0027Tipo non valido.\u0027 };\n    if (!cliente || !linea || !quantita || quantita \u003c\u003d 0) {\n      return { ok:false, message:\u0027Campi obbligatori mancanti o non validi.\u0027 };\n    }\n\n    // Payload enriquecido server-side\n    const payload \u003d {\n      type: \u0027SCATOLA\u0027,\n      cliente, linea, quantita, note,\n      created_at: nowIso_(),\n      created_by_user_id: user.user_id,\n      created_by_email: user.email,\n      squad_id: user.squad_id\n    };\n\n    // DECISI√ìN POR ROL (R001/R002/R003 o nombres) ‚Üí directo a Make\n    if (isCapoOrJefe_(user.role_id)) {\n      const sent \u003d sendToMake_(payload);\n      if (sent.ok) return { ok:true, message:\u0027Inviato a Make.\u0027, make_status:\u0027SENT\u0027, code: sent.code };\n      return { ok:false, message:\u0027Errore inviando a Make: \u0027 + sent.message };\n    }\n\n    // OPERATORE ‚Üí crea pendiente + notifica\n    const reqId \u003d createPendingRequest_(payload);\n    const notified \u003d notifyCapo_(user.squad_id, {\n      request_id: reqId, cliente, linea, quantita\n    }, user);\n    const msg \u003d notified.ok\n      ? \u0027Richiesta creata. In attesa di approvazione.\u0027\n      : \u0027Richiesta creata. (Notifica al Capo non inviata.)\u0027;\n    return { ok:true, request_id: reqId, status:\u0027PENDIENTE\u0027, message: msg };\n\n  } catch(err){\n    return { ok:false, message:\u0027Errore: \u0027 + err.message };\n  }\n}\n"},{"id":"b1b26263-466c-4d89-ae10-9b9c964a9ded","name":"approvals_notifications","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NOTIFICHE + APPROVALS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction notifyCapo_(squad_id, info, requester){\n  try{\n    const notifyUrl \u003d getProp_(\u0027MAKE_NOTIFY_WEBHOOK_URL\u0027);\n    if (notifyUrl) {\n      const res \u003d UrlFetchApp.fetch(notifyUrl, {\n        method: \u0027post\u0027,\n        contentType: \u0027application/json\u0027,\n        payload: JSON.stringify({\n          kind: \u0027REQUEST_CREATED\u0027,\n          squad_id: squad_id,\n          request_id: info.request_id,\n          cliente: info.cliente,\n          linea: info.linea,\n          quantita: info.quantita,\n          requester_email: requester.email,\n          requester_name: (requester.nome||\u0027\u0027) + \u0027 \u0027 + (requester.cognome||\u0027\u0027)\n        }),\n        muteHttpExceptions: true\n      });\n      const code \u003d res.getResponseCode();\n      if (code \u003e\u003d 200 \u0026\u0026 code \u003c 300) return { ok:true };\n      return { ok:false, message:\u0027Webhook notify risponde \u0027 + code };\n    }\n\n    // Sin webhook: correo (si existe capo_email)\n    const sh \u003d ensureSquads_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixId \u003d head.indexOf(\u0027squad_id\u0027);\n    const ixCapoEmail \u003d head.indexOf(\u0027capo_email\u0027); // puede ser -1 si no existe\n    let capoEmail \u003d \u0027\u0027;\n    if (ixCapoEmail \u003e\u003d 0){\n      for (let i\u003d1;i\u003cdata.length;i++){\n        if (String(data[i][ixId]) \u003d\u003d\u003d String(squad_id)){\n          capoEmail \u003d (data[i][ixCapoEmail]||\u0027\u0027).toString().trim();\n          break;\n        }\n      }\n    }\n    if (capoEmail) {\n      GmailApp.sendEmail(\n        capoEmail,\n        \u0027Nuova richiesta etichetta scatola\u0027,\n        \u0027Ciao,\\n\\nHai una nuova richiesta:\\n\u0027 +\n        \u0027- Richiedente: \u0027 + ((requester.nome||\u0027\u0027) + \u0027 \u0027 + (requester.cognome||\u0027\u0027)) + \u0027 (\u0027 + requester.email + \u0027)\\n\u0027 +\n        \u0027- Cliente: \u0027 + info.cliente + \u0027\\n\u0027 +\n        \u0027- Linea: \u0027   + info.linea   + \u0027\\n\u0027 +\n        \u0027- Quantit√†: \u0027+ info.quantita+ \u0027\\n\u0027 +\n        \u0027- ID: \u0027      + info.request_id + \u0027\\n\\n\u0027 +\n        \u0027Apri la WebApp per approvare o rifiutare.\\n\u0027\n      );\n      return { ok:true };\n    }\n    return { ok:false, message:\u0027Nessun canale notify configurato.\u0027 };\n  } catch(e){\n    return { ok:false, message:e.message };\n  }\n}\n\n/** Cuenta \"PENDIENTE\" para la squad del aprobador actual */\nfunction api_countPendingForCapo(){\n  try{\n    const u \u003d getCurrentUser_();\n    if (!isCapoOrJefe_(u.role_id)) return { ok:true, count:0 }; // solo aprobadores\n    const sh \u003d ensureRequests_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixStatus  \u003d head.indexOf(\u0027status\u0027);\n    const ixSquad   \u003d head.indexOf(\u0027squad_id\u0027);\n    let count \u003d 0;\n    for (let r\u003d1; r\u003cdata.length; r++){\n      if (String(data[r][ixSquad]) \u003d\u003d\u003d String(u.squad_id) \u0026\u0026\n          String(data[r][ixStatus]||\u0027\u0027).toUpperCase() \u003d\u003d\u003d \u0027PENDIENTE\u0027){\n        count++;\n      }\n    }\n    return { ok:true, count: count };\n  } catch(e){\n    return { ok:false, message:e.message, count:0 };\n  }\n}\n\n/** Lista \"PENDIENTE\" para la squad del aprobador actual (para el modal) */\nfunction api_listPendingForCapo(){\n  try{\n    const u \u003d getCurrentUser_();\n    if (!isCapoOrJefe_(u.role_id)) return { ok:true, items:[] };\n    const sh \u003d ensureRequests_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixId      \u003d head.indexOf(\u0027request_id\u0027);\n    const ixAt      \u003d head.indexOf(\u0027created_at\u0027);\n    const ixBy      \u003d head.indexOf(\u0027created_by_user_id\u0027);\n    const ixSquad   \u003d head.indexOf(\u0027squad_id\u0027);\n    const ixType    \u003d head.indexOf(\u0027type\u0027);\n    const ixCliente \u003d head.indexOf(\u0027cliente\u0027);\n    const ixLinea   \u003d head.indexOf(\u0027linea\u0027);\n    const ixQty     \u003d head.indexOf(\u0027quantita\u0027);\n    const ixStatus  \u003d head.indexOf(\u0027status\u0027);\n\n    const items \u003d [];\n    for (let r\u003d1; r\u003cdata.length; r++){\n      const row \u003d data[r];\n      if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) continue;\n      if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDIENTE\u0027) continue;\n      items.push({\n        request_id: row[ixId],\n        created_at: row[ixAt],\n        created_by_user_id: row[ixBy],\n        squad_id: row[ixSquad],\n        type: row[ixType],\n        cliente: row[ixCliente],\n        linea: row[ixLinea],\n        quantita: row[ixQty]\n      });\n    }\n    // ordenar por fecha desc\n    items.sort((a,b)\u003d\u003e new Date(b.created_at) - new Date(a.created_at));\n    return { ok:true, items };\n  } catch(e){\n    return { ok:false, message:e.message, items:[] };\n  }\n}\n\n/** Aprobar / Rechazar una solicitud pendiente de mi squad */\nfunction api_approveRequest(request_id, approve, rejection_comment){\n  try{\n    const u \u003d getCurrentUser_();\n    if (!isCapoOrJefe_(u.role_id)) return { ok:false, message:\u0027Permesso negato.\u0027 };\n\n    const sh \u003d ensureRequests_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixId      \u003d head.indexOf(\u0027request_id\u0027);\n    const ixAt      \u003d head.indexOf(\u0027created_at\u0027);\n    const ixBy      \u003d head.indexOf(\u0027created_by_user_id\u0027);\n    const ixSquad   \u003d head.indexOf(\u0027squad_id\u0027);\n    const ixType    \u003d head.indexOf(\u0027type\u0027);\n    const ixCliente \u003d head.indexOf(\u0027cliente\u0027);\n    const ixLinea   \u003d head.indexOf(\u0027linea\u0027);\n    const ixQty     \u003d head.indexOf(\u0027quantita\u0027);\n    const ixStatus  \u003d head.indexOf(\u0027status\u0027);\n    const ixApprBy  \u003d head.indexOf(\u0027approved_by_user_id\u0027);\n    const ixApprAt  \u003d head.indexOf(\u0027approved_at\u0027);\n    const ixReject  \u003d head.indexOf(\u0027rejection_comment\u0027);\n    const ixMakeSt  \u003d head.indexOf(\u0027make_webhook_status\u0027);\n    const ixMakeAtt \u003d head.indexOf(\u0027make_webhook_attempts\u0027);\n    const ixMakeErr \u003d head.indexOf(\u0027make_webhook_last_error\u0027);\n    const ixPayload \u003d head.indexOf(\u0027payload_json\u0027);\n\n    // localizar fila\n    let rowIdx \u003d -1;\n    for (let r\u003d1; r\u003cdata.length; r++){\n      if (String(data[r][ixId]) \u003d\u003d\u003d String(request_id)){\n        rowIdx \u003d r+1; break;\n      }\n    }\n    if (rowIdx \u003c 0) return { ok:false, message:\u0027Richiesta non trovata.\u0027 };\n\n    const row \u003d sh.getRange(rowIdx, 1, 1, sh.getLastColumn()).getValues()[0];\n    if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) return { ok:false, message:\u0027Non appartiene alla tua squadra.\u0027 };\n    if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDIENTE\u0027) return { ok:false, message:\u0027La richiesta non √® pi√π in attesa.\u0027 };\n\n    if (approve){\n      // enviar a Make con el payload original\n      let payload \u003d {};\n      try { payload \u003d JSON.parse(row[ixPayload]||\u0027{}\u0027); } catch(_){}\n      const sent \u003d sendToMake_(payload);\n      // persistir estado\n      sh.getRange(rowIdx, ixStatus+1).setValue(\u0027APPROVATO\u0027);\n      sh.getRange(rowIdx, ixApprBy+1).setValue(u.user_id);\n      sh.getRange(rowIdx, ixApprAt+1).setValue(new Date());\n      sh.getRange(rowIdx, ixReject+1).setValue(\u0027\u0027);\n      sh.getRange(rowIdx, ixMakeSt+1).setValue(sent.ok ? \u0027SENT\u0027 : \u0027ERROR\u0027);\n      sh.getRange(rowIdx, ixMakeAtt+1).setValue( Number(row[ixMakeAtt]||0) + 1 );\n      sh.getRange(rowIdx, ixMakeErr+1).setValue(sent.ok ? \u0027\u0027 : (sent.message||\u0027\u0027));\n      return sent.ok\n        ? { ok:true, message:\u0027Inviato a Make.\u0027 }\n        : { ok:false, message:\u0027Errore inviando a Make: \u0027 + (sent.message||\u0027\u0027) };\n    } else {\n      // rechazo\n      sh.getRange(rowIdx, ixStatus+1).setValue(\u0027RIFIUTATO\u0027);\n      sh.getRange(rowIdx, ixApprBy+1).setValue(u.user_id);\n      sh.getRange(rowIdx, ixApprAt+1).setValue(new Date());\n      sh.getRange(rowIdx, ixReject+1).setValue(String(rejection_comment||\u0027\u0027));\n      return { ok:true, message:\u0027Richiesta rifiutata.\u0027 };\n    }\n  } catch(e){\n    return { ok:false, message:e.message };\n  }\n}\n"},{"id":"ee3ef422-d325-49aa-b947-4e9c88d83595","name":"external_clienti","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CLIENTI (desde Sheet externo) \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction RUN_ONCE__ConfigureExternalClienti(){\n  PropertiesService.getScriptProperties().setProperty(\u0027EXT_CLIENTI_SHEET_ID\u0027,\n    \u00271qUwypzlYJmZPjAMkLJrJVxp1XTgN2H3lJYtafXu-yMY\u0027\n  );\n  PropertiesService.getScriptProperties().setProperty(\u0027EXT_CLIENTI_TAB_NAME\u0027, \u0027CLIENTES\u0027);\n  Logger.log(\u0027OK: EXT_CLIENTI_SHEET_ID + EXT_CLIENTI_TAB_NAME configurados.\u0027);\n}\nfunction readExternalClienti_(){\n  const props \u003d PropertiesService.getScriptProperties();\n  const extId  \u003d (props.getProperty(\u0027EXT_CLIENTI_SHEET_ID\u0027)||\u0027\u0027).trim();\n  const extTab \u003d (props.getProperty(\u0027EXT_CLIENTI_TAB_NAME\u0027)||\u0027\u0027).trim();\n  if (!extId) throw new Error(\u0027Falta EXT_CLIENTI_SHEET_ID\u0027);\n\n  const ext \u003d SpreadsheetApp.openById(extId);\n  const sh  \u003d extTab ? ext.getSheetByName(extTab) : ext.getSheets()[0];\n  if (!sh) throw new Error(\u0027No se encontr√≥ la pesta√±a \"\u0027+extTab+\u0027\" en el Sheet externo.\u0027);\n\n  const data \u003d sh.getDataRange().getValues();\n  if (data.length \u003c\u003d 1) return [];\n\n  const head \u003d data[0].map(h \u003d\u003e String(h||\u0027\u0027).trim().toLowerCase());\n  const iIdCand   \u003d [head.indexOf(\u0027cliente_id\u0027), head.indexOf(\u0027id\u0027)].filter(i\u003d\u003ei\u003e\u003d0)[0];\n  const iNameCand \u003d [head.indexOf(\u0027cliente_name\u0027), head.indexOf(\u0027cliente\u0027), head.indexOf(\u0027name\u0027), head.indexOf(\u0027nombre\u0027)].filter(i\u003d\u003ei\u003e\u003d0)[0];\n  const iAct      \u003d head.indexOf(\u0027is_active\u0027);\n\n  const out \u003d [];\n  for (let r\u003d1; r\u003cdata.length; r++){\n    const row \u003d data[r];\n    const name \u003d (iNameCand!\u003dnull) ? String(row[iNameCand]||\u0027\u0027).trim() : String(row[0]||\u0027\u0027).trim();\n    if (!name) continue;\n    const id   \u003d (iIdCand!\u003dnull) ? String(row[iIdCand]||\u0027\u0027).trim() : name;\n    const act  \u003d (iAct\u003e\u003d0) ? String(row[iAct]).toLowerCase() \u003d\u003d\u003d \u0027true\u0027 : true;\n    out.push({ id, name, active: act });\n  }\n  return out;\n}\nfunction syncClientiFromExternal_(){\n  const src \u003d readExternalClienti_();\n  if (!src.length) throw new Error(\u0027No se encontraron clientes v√°lidos en el Sheet externo.\u0027);\n\n  const seen \u003d new Map(); // nombre normalizado -\u003e registro\n  for (const c of src){\n    const key \u003d String(c.name||\u0027\u0027).trim().toUpperCase();\n    if (!key) continue;\n    if (!seen.has(key)){\n      seen.set(key, { id: c.id || c.name, name: c.name, active: (c.active !\u003d\u003d false) });\n    }\n  }\n  const list \u003d Array.from(seen.values()).sort((a,b)\u003d\u003e a.name.localeCompare(b.name));\n\n  const sh \u003d ensureClienti_();\n  // Limpia datos previos (deja headers)\n  if (sh.getLastRow() \u003e 1) sh.getRange(2,1,sh.getLastRow()-1, sh.getLastColumn()).clearContent();\n\n  const now \u003d new Date();\n  const out \u003d list.map(c \u003d\u003e [c.id, c.name, c.active, now]);\n  if (out.length) sh.getRange(2,1,out.length,4).setValues(out);\n\n  Logger.log(\u0027CLIENTI sincronizados: \u0027 + out.length);\n  return { ok:true, count: out.length };\n}\nfunction listClienti(){\n  const sh \u003d ensureClienti_();\n  const data \u003d sh.getDataRange().getValues();\n  if (data.length \u003c\u003d 1) return [];\n  const head \u003d data[0];\n  const iId   \u003d head.indexOf(\u0027cliente_id\u0027);\n  const iName \u003d head.indexOf(\u0027cliente_name\u0027);\n  const iAct  \u003d head.indexOf(\u0027is_active\u0027);\n  const out \u003d [];\n  for (let r\u003d1; r\u003cdata.length; r++){\n    const active \u003d String(data[r][iAct]).toLowerCase() \u003d\u003d\u003d \u0027true\u0027;\n    if (!active) continue;\n    const id \u003d (data[r][iId]||\u0027\u0027).toString().trim();\n    const nm \u003d (data[r][iName]||\u0027\u0027).toString().trim();\n    if (id \u0026\u0026 nm) out.push({ cliente_id: id, cliente_name: nm });\n  }\n  out.sort((a,b)\u003d\u003e a.cliente_name.localeCompare(b.cliente_name));\n  return out;\n}\n"},{"id":"59c61082-90c2-476c-935c-f8e462967459","name":"ui_menu","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UI ENTRY (doGet + fondo) \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction getBgDataUrl_() {\n  try {\n    const file \u003d DriveApp.getFileById(BG_FILE_ID);\n    const blob \u003d file.getBlob();\n    const mime \u003d blob.getContentType(); // ej: image/jpeg\n    const bytes \u003d Utilities.base64Encode(blob.getBytes());\n    return { url: \u0027data:\u0027 + mime + \u0027;base64,\u0027 + bytes, mime, size: blob.getBytes().length };\n  } catch (e) {\n    return { url: \u0027\u0027, mime: \u0027\u0027, size: 0, error: e.message };\n  }\n}\n\n/** doGet: usa Template para inyectar bgDataUrl */\nfunction doGet(e) {\n  const t \u003d HtmlService.createTemplateFromFile(\u0027index\u0027);\n  const bg \u003d getBgDataUrl_();\n  t.bgDataUrl \u003d bg.url;          // string data URL (o vac√≠o si error)\n  t.bgError   \u003d bg.error || \u0027\u0027;  // texto si hubo error\n  t.bgMime    \u003d bg.mime || \u0027\u0027;\n  t.bgSize    \u003d bg.size || 0;\n  return t.evaluate()\n           .setTitle(\u0027Cereal Food ‚Äì Etichette\u0027)\n           .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);\n}\n"},{"id":"c32fa215-8722-4fe4-9db8-5ab44862af14","name":"seed_dev","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SEED / HOTFIX (DESARROLLO) \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\n/** Crea/obtiene la hoja CREDENTIALS para listar credenciales generadas */\nfunction HOTFIX_ensureCredentials_(){\n  const ss \u003d getDb_();\n  let sh \u003d ss.getSheetByName(\u0027CREDENTIALS\u0027);\n  if (!sh){\n    sh \u003d ss.insertSheet(\u0027CREDENTIALS\u0027);\n    sh.appendRow([\u0027nome\u0027,\u0027cognome\u0027,\u0027email\u0027,\u0027role_id\u0027,\u0027squad_id\u0027,\u0027password_plain\u0027]);\n  }\n  return sh;\n}\n\n/** Asegura una squad por nombre de Capo; devuelve squad_id */\nfunction HOTFIX_ensureSquadByCapoName_(shSquads, capoName){\n  const head \u003d shSquads.getRange(1,1,1,shSquads.getLastColumn()).getValues()[0];\n  const ixId   \u003d head.indexOf(\u0027squad_id\u0027);\n  const ixName \u003d head.indexOf(\u0027squad_name\u0027);\n  const ixCapo \u003d head.indexOf(\u0027capo_name\u0027);\n  const ixVice \u003d head.indexOf(\u0027vice_name\u0027);\n  const ixCapoEmail \u003d head.indexOf(\u0027capo_email\u0027);\n  const ixViceEmail \u003d head.indexOf(\u0027vice_email\u0027);\n\n  const data \u003d shSquads.getDataRange().getValues();\n  for (let r\u003d1;r\u003cdata.length;r++){\n    const row \u003d data[r];\n    if (String(row[ixName]||\u0027\u0027).trim() \u003d\u003d\u003d capoName){\n      // Completa capo/vice emails si faltan (pseudo)\n      const capoEmail \u003d (row[ixCapoEmail]||\u0027\u0027).toString().trim();\n      const viceEmail \u003d (row[ixViceEmail]||\u0027\u0027).toString().trim();\n      if (!capoEmail \u0026\u0026 ixCapoEmail\u003e\u003d0) shSquads.getRange(r+1, ixCapoEmail+1).setValue(HOTFIX_pseudoEmail_(capoName));\n      if (!viceEmail \u0026\u0026 ixViceEmail\u003e\u003d0 \u0026\u0026 row[ixVice]) shSquads.getRange(r+1, ixViceEmail+1).setValue(HOTFIX_pseudoEmail_(row[ixVice]));\n      return String(row[ixId]);\n    }\n  }\n  const squad_id \u003d \u0027SQUAD-\u0027 + capoName.toUpperCase().replace(/\\s+/g,\u0027\u0027).slice(0,12);\n  const capoEmail \u003d HOTFIX_pseudoEmail_(capoName);\n  shSquads.appendRow([squad_id, capoName, capoName, \u0027\u0027, capoEmail, \u0027\u0027]);\n  return squad_id;\n}\n\nfunction HOTFIX_pseudoEmail_(fullName){\n  const parts \u003d String(fullName||\u0027\u0027).trim().toLowerCase().split(/\\s+/);\n  return (parts[0]||\u0027user\u0027) + \u0027.\u0027 + (parts.slice(1).join(\u0027.\u0027)||\u0027cf\u0027) + \u0027@temp.local\u0027;\n}\n\n/** Hash compatible con login (SHA-256 de \"pwd|email\") */\nfunction HOTFIX_hashPassword_(plain, email){\n  const bytes \u003d Utilities.computeDigest(Utilities.DigestAlgorithm.SHA_256, String(plain||\u0027\u0027) + \u0027|\u0027 + String(email||\u0027\u0027));\n  return Utilities.base64Encode(bytes);\n}\n\n/** Crea/actualiza un usuario con rol/squad/password */\nfunction HOTFIX_upsertUser_(shUsers, shCred, u, squad_id){\n  const head \u003d shUsers.getRange(1,1,1,shUsers.getLastColumn()).getValues()[0];\n  const ixEmail \u003d head.indexOf(\u0027email\u0027);\n  const ixRole  \u003d head.indexOf(\u0027role_id\u0027);\n  const ixSquad \u003d head.indexOf(\u0027squad_id\u0027);\n  const ixHash  \u003d head.indexOf(\u0027password_hash\u0027);\n\n  // buscar existente\n  const data \u003d shUsers.getDataRange().getValues();\n  let foundRow \u003d null;\n  for (let r\u003d1;r\u003cdata.length;r++){\n    if (String(data[r][ixEmail]||\u0027\u0027).toLowerCase() \u003d\u003d\u003d String(u.email||\u0027\u0027).toLowerCase()){\n      foundRow \u003d r+1; break;\n    }\n  }\n  const hash \u003d HOTFIX_hashPassword_(u.password, u.email);\n\n  if (foundRow){\n    shUsers.getRange(foundRow, ixRole+1).setValue(u.role_id);\n    shUsers.getRange(foundRow, ixSquad+1).setValue(squad_id);\n    shUsers.getRange(foundRow, ixHash+1).setValue(hash);\n    shCred.appendRow([u.nome, u.cognome, u.email, u.role_id, squad_id, u.password]);\n    return { email:u.email, status:\u0027UPDATED\u0027 };\n  } else {\n    const user_id \u003d \u0027U\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n    shUsers.appendRow([user_id, u.nome, u.cognome, u.email, u.role_id, squad_id, true, new Date(), hash]);\n    shCred.appendRow([u.nome, u.cognome, u.email, u.role_id, squad_id, u.password]);\n    return { email:u.email, status:\u0027CREATED\u0027 };\n  }\n}\n\n/** SEED principal: crea squads y 6 usuarios CAPO/VICE con contrase√±as fijas */\nfunction HOTFIX_seedCaposVices_(){\n  const shUsers  \u003d ensureUsers_();\n  const shSquads \u003d ensureSquads_();\n  const shCred   \u003d HOTFIX_ensureCredentials_();\n\n  // Definici√≥n de capos/vices\n  const CAPOS \u003d [\u0027Carlo Marino\u0027,\u0027Domenico Zito\u0027,\u0027Alfredo Colamorea\u0027];\n  const VICES \u003d [\n    { vice:\u0027Julia Testores\u0027,    capo:\u0027Carlo Marino\u0027     },\n    { vice:\u0027Loris Inglese\u0027,     capo:\u0027Domenico Zito\u0027    },\n    { vice:\u0027Mikela Giovanette\u0027, capo:\u0027Alfredo Colamorea\u0027}\n  ];\n\n  // Asegurar squads por capo\n  const squadByCapo \u003d {};\n  CAPOS.forEach(capo \u003d\u003e { squadByCapo[capo] \u003d HOTFIX_ensureSquadByCapoName_(shSquads, capo); });\n\n  // Usuarios fijos (CAPO R002, VICE R003)\n  const USERS \u003d [\n    { nome:\u0027Carlo\u0027,   cognome:\u0027Marino\u0027,     email:\u0027carlo.marino@temp.local\u0027,      role_id:\u0027R002\u0027, squad_name:\u0027Carlo Marino\u0027,      password:\u00279hT7Q2ZP\u0027 },\n    { nome:\u0027Domenico\u0027,cognome:\u0027Zito\u0027,       email:\u0027domenico.zito@temp.local\u0027,     role_id:\u0027R002\u0027, squad_name:\u0027Domenico Zito\u0027,     password:\u0027F3N6K8JW\u0027 },\n    { nome:\u0027Alfredo\u0027, cognome:\u0027Colamorea\u0027,  email:\u0027alfredo.colamorea@temp.local\u0027, role_id:\u0027R002\u0027, squad_name:\u0027Alfredo Colamorea\u0027, password:\u0027R7B2M4LC\u0027 },\n    { nome:\u0027Julia\u0027,   cognome:\u0027Testores\u0027,   email:\u0027julia.testores@temp.local\u0027,    role_id:\u0027R003\u0027, squad_name:\u0027Carlo Marino\u0027,      password:\u0027P6V9D1TX\u0027 },\n    { nome:\u0027Loris\u0027,   cognome:\u0027Inglese\u0027,    email:\u0027loris.inglese@temp.local\u0027,     role_id:\u0027R003\u0027, squad_name:\u0027Domenico Zito\u0027,     password:\u0027H8C3S5QA\u0027 },\n    { nome:\u0027Mikela\u0027,  cognome:\u0027Giovanette\u0027, email:\u0027mikela.giovanette@temp.local\u0027, role_id:\u0027R003\u0027, squad_name:\u0027Alfredo Colamorea\u0027, password:\u0027N2W4Y7DG\u0027 }\n  ];\n\n  const results \u003d [];\n  USERS.forEach(u \u003d\u003e {\n    const squad_id \u003d squadByCapo[u.squad_name];\n    results.push(HOTFIX_upsertUser_(shUsers, shCred, u, squad_id));\n  });\n\n  Logger.log(JSON.stringify(results, null, 2));\n  return { ok:true, results:results, note:\u0027Revis√° la hoja CREDENTIALS\u0027 };\n}\n\n/** Setear/actualizar el webhook de Make en Script Properties */\nfunction HOTFIX_setWebhook_(){\n  PropertiesService.getScriptProperties().setProperty(\n    \u0027MAKE_APPROVAL_WEBHOOK_URL\u0027,\n    \u0027https://hook.eu2.make.com/4n0u3otfcudumd04tc1kjb0v80bum7iz\u0027\n  );\n  // Opcional: canal de notify (si lo ten√©s)\n  // PropertiesService.getScriptProperties().setProperty(\u0027MAKE_NOTIFY_WEBHOOK_URL\u0027,\u0027https://hook.eu2.make.com/XXXX\u0027);\n  return \u0027OK\u0027;\n}\n\n/** Wrapper para men√∫ */\nfunction RUN_SEED_CAPOS_VICES(){\n  return HOTFIX_seedCaposVices_();\n}\n"},{"id":"27749604-6307-4c5b-b3a1-c859ad51e3f5","name":"api_public","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d API P√öBLICA PARA EL FRONT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\n// Lista para dropdown de capoturni en ‚ÄúRichiedi accesso‚Äù\nfunction listCapoturni() {\n  const sh \u003d ensureSquads_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const iId \u003d head.indexOf(\u0027squad_id\u0027);\n  const iName \u003d head.indexOf(\u0027squad_name\u0027);\n  const iCapo \u003d head.indexOf(\u0027capo_name\u0027);\n  const out \u003d [];\n  for (let i \u003d 1; i \u003c data.length; i++) {\n    if (data[i][iId] \u0026\u0026 data[i][iName]) {\n      out.push({ squad_id: data[i][iId], squad_name: data[i][iName], capo_name: data[i][iCapo] || \u0027\u0027 });\n    }\n  }\n  return out;\n}\n"},{"id":"89e60551-e887-4648-9f7b-1bba24d62fed","name":"admin_menu","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ADMIN / MEN√ö \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction setUserRoleByEmail_(email, newRole){\n  const sh \u003d ensureUsers_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const iEmail \u003d head.indexOf(\u0027email\u0027);\n  const iRole  \u003d head.indexOf(\u0027role_id\u0027);\n  for (let r\u003d1; r\u003cdata.length; r++){\n    if ((data[r][iEmail]||\u0027\u0027).toString().trim().toLowerCase() \u003d\u003d\u003d String(email||\u0027\u0027).trim().toLowerCase()){\n      sh.getRange(r+1, iRole+1).setValue(newRole); // \u0027R001\u0027 o \u0027JEFE\u0027\n      return \u0027OK\u0027;\n    }\n  }\n  throw new Error(\u0027Email non trovato: \u0027 + email);\n}\n\n/**\n * Crea/actualiza un superusuario (R001 \u003d JEFE) con contrase√±a fija.\n * - Usuario: esebalbastro@gmail.com\n * - Password: QDkRkKpf8i\n * - Squad: ADMIN (se crea si no existe)\n * - Tambi√©n agrega fila en CREDENTIALS si existe esa hoja.\n */\nfunction RUN_ADD_SUPERUSER(){\n  var email \u003d \u0027esebalbastro@gmail.com\u0027;\n  var password \u003d \u0027QDkRkKpf8i\u0027;\n  var nome \u003d \u0027Ese\u0027;\n  var cognome \u003d \u0027Balbastro\u0027;\n\n  // Asegurar hojas base\n  var shUsers  \u003d ensureUsers_();\n  var shSquads \u003d ensureSquads_();\n\n  // 1) Asegurar SQUAD ADMIN\n  var headS \u003d shSquads.getRange(1,1,1,Math.max(1, shSquads.getLastColumn())).getValues()[0];\n  var s_ixId   \u003d headS.indexOf(\u0027squad_id\u0027);\n  var s_ixName \u003d headS.indexOf(\u0027squad_name\u0027);\n  var adminSquadId \u003d null;\n\n  var dataS \u003d shSquads.getDataRange().getValues();\n  for (var i\u003d1;i\u003cdataS.length;i++){\n    var name \u003d (dataS[i][s_ixName] || \u0027\u0027).toString().trim().toUpperCase();\n    if (name \u003d\u003d\u003d \u0027ADMIN\u0027){\n      adminSquadId \u003d (dataS[i][s_ixId] || \u0027\u0027).toString().trim();\n      break;\n    }\n  }\n  if (!adminSquadId){\n    adminSquadId \u003d \u0027SQUAD-ADMIN\u0027;\n    // cols: squad_id,squad_name,capo_name,vice_name,capo_email,vice_email\n    shSquads.appendRow([adminSquadId, \u0027ADMIN\u0027, \u0027(Jefe)\u0027, \u0027\u0027, \u0027\u0027, \u0027\u0027]);\n  }\n\n  // 2) Crear/actualizar el usuario como R001 (JEFE) con password fija\n  var headU   \u003d shUsers.getRange(1,1,1,Math.max(1, shUsers.getLastColumn())).getValues()[0];\n  var u_ixEmail \u003d headU.indexOf(\u0027email\u0027);\n  var u_ixRole  \u003d headU.indexOf(\u0027role_id\u0027);\n  var u_ixSquad \u003d headU.indexOf(\u0027squad_id\u0027);\n  var u_ixHash  \u003d headU.indexOf(\u0027password_hash\u0027);\n  var u_ixActive\u003d headU.indexOf(\u0027is_active\u0027);\n\n  var dataU \u003d shUsers.getDataRange().getValues();\n  var foundRow \u003d null;\n  for (var r\u003d1;r\u003cdataU.length;r++){\n    var em \u003d (dataU[r][u_ixEmail] || \u0027\u0027).toString().trim().toLowerCase();\n    if (em \u003d\u003d\u003d email.toLowerCase()){\n      foundRow \u003d r+1;\n      break;\n    }\n  }\n\n  var hash \u003d hashPassword_(password, email);\n  if (foundRow){\n    if (u_ixRole  \u003e\u003d0) shUsers.getRange(foundRow, u_ixRole+1 ).setValue(\u0027R001\u0027);\n    if (u_ixSquad \u003e\u003d0) shUsers.getRange(foundRow, u_ixSquad+1).setValue(adminSquadId);\n    if (u_ixHash  \u003e\u003d0) shUsers.getRange(foundRow, u_ixHash+1 ).setValue(hash);\n    if (u_ixActive\u003e\u003d0) shUsers.getRange(foundRow, u_ixActive+1).setValue(true);\n  } else {\n    var user_id \u003d \u0027U\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n    shUsers.appendRow([user_id, nome, cognome, email, \u0027R001\u0027, adminSquadId, true, new Date(), hash]);\n  }\n\n  // 3) (Opcional) Registrar en CREDENTIALS si existe\n  try{\n    var ss \u003d getDb_();\n    var cred \u003d ss.getSheetByName(\u0027CREDENTIALS\u0027);\n    if (cred){\n      cred.appendRow([nome, cognome, email, \u0027R001\u0027, adminSquadId, password]);\n    }\n  }catch(e){ /* no-op */ }\n\n  Logger.log(\u0027Superuser listo -\u003e \u0027 + email + \u0027 / \u0027 + password + \u0027 (role R001, squad \u0027 + adminSquadId + \u0027)\u0027);\n  return { ok:true, email: email, role_id: \u0027R001\u0027, squad_id: adminSquadId };\n}\n\n/** Verificaci√≥n r√°pida en Logs */\nfunction debug_CheckSetup_(){\n  try{\n    const u \u003d getCurrentUser_();\n    Logger.log(\u0027CURRENT user email\u003d%s role_id\u003d%s squad_id\u003d%s\u0027, u.email, u.role_id, u.squad_id);\n    Logger.log(\u0027MAKE_APPROVAL_WEBHOOK_URL\u003d%s\u0027, getProp_(\u0027MAKE_APPROVAL_WEBHOOK_URL\u0027));\n    Logger.log(\u0027MAKE_NOTIFY_WEBHOOK_URL\u003d%s\u0027, getProp_(\u0027MAKE_NOTIFY_WEBHOOK_URL\u0027));\n  } catch(e){\n    Logger.log(\u0027Error debug: \u0027 + e.message);\n  }\n}\n\n/** Men√∫ (√∫nico) */\nfunction onOpen(){\n  try{\n    SpreadsheetApp.getUi()\n      .createMenu(\u0027CF Admin\u0027)\n      .addItem(\u0027Crear/actualizar SUPERUSER (R001)\u0027, \u0027RUN_ADD_SUPERUSER\u0027)\n      .addItem(\u0027Seed CAPOS/VICES\u0027, \u0027RUN_SEED_CAPOS_VICES\u0027)     // en seed_dev.gs\n      .addItem(\u0027Set Webhook Make (HOTFIX)\u0027, \u0027HOTFIX_setWebhook_\u0027) // en seed_dev.gs\n      .addSeparator()\n      .addItem(\u0027Debug: Check Setup (Logs)\u0027, \u0027debug_CheckSetup_\u0027)\n      .addToUi();\n  }catch(e){\n    // Si es standalone (no vinculado a sheet), no hay UI\n  }\n}\n"},{"id":"41fd3773-f3bf-41d6-97fe-d87721aa172d","name":"templates","type":"server_js","source":"function include(filename){\n  return HtmlService.createHtmlOutputFromFile(filename).getContent();\n}\n"},{"id":"a8db8a9b-4bf5-4f61-9442-aecc3444e576","name":"notifications","type":"html","source":"\u003c!-- BLOQUE EXCLUSIVO DE NOTIFICACIONES --\u003e\n\u003cstyle\u003e\n  :root{\n    --notif-fs: clamp(18px, 4vw, 20px);\n    --notif-pad-y: clamp(12px, 3.6vw, 16px);\n    --notif-pad-x: clamp(16px, 5vw, 22px);\n    --notif-gap: clamp(12px, 3.6vw, 16px);\n    --notif-dot: clamp(14px, 3.8vw, 18px);\n    --accent:#F4B400;\n  }\n  .notif{\n    position:fixed;\n    left:12px; right:auto; bottom:16px;\n    display:flex; align-items:center; gap:var(--notif-gap);\n    background:rgba(255,255,255,.82);\n    backdrop-filter: blur(8px);\n    padding: var(--notif-pad-y) var(--notif-pad-x);\n    border-radius:14px;\n    color:#0f172a; font-weight:700;\n    border:1px solid rgba(255,255,255,.75);\n    cursor:pointer;\n    box-shadow:0 12px 32px rgba(0,0,0,.22);\n    font-size: var(--notif-fs);\n    line-height:1.25;\n    z-index:9999;\n    -webkit-tap-highlight-color: transparent;\n    max-width: 94vw;\n  }\n  .notif:focus-visible{ outline:3px solid rgba(244,180,0,.5) }\n  .notif strong{ font-size:1.05em; }\n  .dot{ width:var(--notif-dot); height:var(--notif-dot); border-radius:50%; background:var(--accent); box-shadow:0 0 0 6px rgba(244,180,0,.22); flex:0 0 auto; }\n  @media (max-width: 600px){\n    .notif{ left:12px !important; right:12px !important; bottom: calc(16px + env(safe-area-inset-bottom)) !important; background: rgba(255,255,255,.9) !important; }\n  }\n  @keyframes notifPulse { 0%{transform:scale(1);box-shadow:0 0 0 0 rgba(244,180,0,.45)} 50%{transform:scale(1.03);box-shadow:0 0 0 12px rgba(244,180,0,0)} 100%{transform:scale(1);box-shadow:0 0 0 0 rgba(244,180,0,0)} }\n  .notif--pulse { animation: notifPulse 900ms ease-out 0s 2; }\n\u003c/style\u003e\n\n\u003cdiv class\u003d\"notif\" id\u003d\"notif\" role\u003d\"button\" tabindex\u003d\"0\" aria-label\u003d\"Apri notifiche\"\u003e\n  \u003cspan class\u003d\"dot\" aria-hidden\u003d\"true\"\u003e\u003c/span\u003e\n  \u003cspan\u003eNotifiche\u003c/span\u003e\n  \u003cstrong id\u003d\"notifCount\" style\u003d\"margin-left:6px\"\u003e0\u003c/strong\u003e\n\u003c/div\u003e\n\n\u003cdiv id\u003d\"modalApprovals\" class\u003d\"modal\" aria-hidden\u003d\"true\"\u003e\n  \u003cdiv class\u003d\"card\"\u003e\n    \u003ch3\u003eNotifiche in attesa\u003c/h3\u003e\n    \u003cdiv id\u003d\"apprList\" class\u003d\"muted\" style\u003d\"max-height:50vh; overflow:auto\"\u003e\u003c/div\u003e\n    \u003cdiv class\u003d\"actions\"\u003e\n      \u003cbutton id\u003d\"btnApprClose\" class\u003d\"btn btn-ghost\" type\u003d\"button\"\u003eChiudi\u003c/button\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003caudio id\u003d\"notifSound\" preload\u003d\"auto\"\u003e\n  \u003csource src\u003d\"data:audio/wav;base64,UklGRmQAAABXQVZFZm10IBAAAAABAAEAESsAACJWAAACABYAAAAgAAAAAAAAgACAgICAgP//AACAgICAgP//AACAgICAgP//AACAgAAAAAA\u003d\" type\u003d\"audio/wav\"\u003e\n\u003c/audio\u003e\n\n\u003cscript\u003e\n(function(){\n  const el \u003d {\n    notif: document.getElementById(\u0027notif\u0027),\n    count: document.getElementById(\u0027notifCount\u0027),\n    modal: document.getElementById(\u0027modalApprovals\u0027),\n    list:  document.getElementById(\u0027apprList\u0027),\n    close: document.getElementById(\u0027btnApprClose\u0027),\n    beep:  document.getElementById(\u0027notifSound\u0027)\n  };\n\n  (function boostNotifForMobile(){\n    const isTouch \u003d window.matchMedia(\u0027(pointer:coarse)\u0027).matches || /Android|iPhone|iPad/i.test(navigator.userAgent);\n    if (!isTouch || !el.notif) return;\n    Object.assign(el.notif.style, {\n      left: \u002712px\u0027, right: \u002712px\u0027,\n      bottom: \u0027calc(16px + env(safe-area-inset-bottom))\u0027,\n      padding: \u002716px 20px\u0027, fontSize: \u002720px\u0027, lineHeight: \u00271.25\u0027,\n      borderRadius: \u002714px\u0027, background: \u0027rgba(255,255,255,.92)\u0027,\n      boxShadow: \u00270 12px 32px rgba(0,0,0,.25)\u0027, zIndex: \u002799999\u0027, maxWidth: \u002794vw\u0027\n    });\n    const dot \u003d el.notif.querySelector(\u0027.dot\u0027);\n    if (dot) { dot.style.width \u003d \u002718px\u0027; dot.style.height \u003d \u002718px\u0027; dot.style.boxShadow \u003d \u00270 0 0 6px rgba(244,180,0,.22)\u0027; dot.style.flex \u003d \u00270 0 auto\u0027; }\n  })();\n\n  (function unlockSoundOnFirstInteraction(){\n    const once \u003d () \u003d\u003e {\n      if (!el.beep) return;\n      el.beep.play().then(()\u003d\u003e{ el.beep.pause(); el.beep.currentTime\u003d0; }).catch(()\u003d\u003e{});\n      document.removeEventListener(\u0027click\u0027, once);\n      document.removeEventListener(\u0027touchstart\u0027, once);\n    };\n    document.addEventListener(\u0027click\u0027, once, { once:true });\n    document.addEventListener(\u0027touchstart\u0027, once, { once:true, passive:true });\n  })();\n\n  let pollTimer \u003d null, lastCount \u003d 0, firstTick \u003d true;\n\n  function pulseAndBeep(newCount){\n    try {\n      if (el.notif){ el.notif.classList.add(\u0027notif--pulse\u0027); setTimeout(()\u003d\u003e el.notif.classList.remove(\u0027notif--pulse\u0027), 2000); }\n      if (el.beep){ el.beep.currentTime \u003d 0; el.beep.play().catch(()\u003d\u003e{}); }\n      if (navigator.vibrate) navigator.vibrate([160,80,160]);\n    } catch(_) {}\n    lastCount \u003d newCount;\n  }\n\n  function renderItems(items){\n    if (!items || !items.length){\n      el.list.innerHTML \u003d \u0027\u003cdiv\u003eNessuna notifica in attesa.\u003c/div\u003e\u0027;\n      return;\n    }\n    el.list.innerHTML \u003d \u0027\u0027;\n    items.forEach(it\u003d\u003e{\n      if (it.type \u003d\u003d\u003d \u0027SCATOLA\u0027){\n        const div \u003d document.createElement(\u0027div\u0027);\n        div.style.border\u003d\u00271px solid #e2e8f0\u0027; div.style.borderRadius\u003d\u002710px\u0027;\n        div.style.padding\u003d\u002710px\u0027; div.style.margin\u003d\u00278px 0\u0027;\n        div.innerHTML \u003d `\n          \u003cdiv\u003e\u003cstrong\u003eSCATOLA\u003c/strong\u003e ‚Ä¢ ${it.request_id}\u003c/div\u003e\n          \u003cdiv\u003eCliente: ${it.cliente} ‚Äî Linea: ${it.linea} ‚Äî Quantit√†: ${it.quantita}\u003c/div\u003e\n          \u003cdiv class\u003d\"muted\"\u003eCreato: ${new Date(it.created_at).toLocaleString()}\u003c/div\u003e\n          \u003cdiv class\u003d\"actions\" style\u003d\"margin-top:8px; gap:8px\"\u003e\n            \u003cbutton class\u003d\"btn btn-primary\" data-type\u003d\"SCATOLA\" data-act\u003d\"approve\" data-id\u003d\"${it.request_id}\"\u003eApprova\u003c/button\u003e\n            \u003cbutton class\u003d\"btn btn-ghost\" data-type\u003d\"SCATOLA\" data-act\u003d\"reject\"  data-id\u003d\"${it.request_id}\"\u003eRifiuta\u003c/button\u003e\n          \u003c/div\u003e\n        `;\n        el.list.appendChild(div);\n      } else if (it.type \u003d\u003d\u003d \u0027ASSISTENZA\u0027){\n        const div \u003d document.createElement(\u0027div\u0027);\n        div.style.border\u003d\u00271px solid #e2e8f0\u0027; div.style.borderRadius\u003d\u002710px\u0027;\n        div.style.padding\u003d\u002710px\u0027; div.style.margin\u003d\u00278px 0\u0027;\n        div.innerHTML \u003d `\n          \u003cdiv\u003e\u003cstrong\u003eASSISTENZA ‚Ä¢ ${it.target}\u003c/strong\u003e ‚Ä¢ ${it.assist_id}\u003c/div\u003e\n          \u003cdiv\u003eLinea: ${it.linea}\u003c/div\u003e\n          \u003cdiv\u003eMessaggio: ${it.message || \u0027‚Äî\u0027}\u003c/div\u003e\n          \u003cdiv class\u003d\"muted\"\u003eRichiedente: ${it.requester_email || \u0027‚Äî\u0027} ‚Ä¢ Creato: ${new Date(it.created_at).toLocaleString()}\u003c/div\u003e\n          \u003cdiv class\u003d\"actions\" style\u003d\"margin-top:8px; gap:8px\"\u003e\n            \u003cbutton class\u003d\"btn btn-primary\" data-type\u003d\"ASSISTENZA\" data-act\u003d\"ack\" data-id\u003d\"${it.assist_id}\"\u003eSegna come gestita\u003c/button\u003e\n          \u003c/div\u003e\n        `;\n        el.list.appendChild(div);\n      }\n    });\n\n    // Bind acciones\n    el.list.querySelectorAll(\u0027button\u0027).forEach(btn\u003d\u003e{\n      btn.addEventListener(\u0027click\u0027, ()\u003d\u003e{\n        const id  \u003d btn.getAttribute(\u0027data-id\u0027);\n        const act \u003d btn.getAttribute(\u0027data-act\u0027);\n        const typ \u003d btn.getAttribute(\u0027data-type\u0027);\n\n        if (typ \u003d\u003d\u003d \u0027SCATOLA\u0027){\n          if (act \u003d\u003d\u003d \u0027approve\u0027){\n            btn.disabled \u003d true; btn.textContent \u003d \u0027Invio...\u0027;\n            google.script.run\n              .withSuccessHandler(r\u003d\u003e{ alert(r \u0026\u0026 r.ok ? \u0027Approvata e inviata a Make.\u0027 : (r \u0026\u0026 r.message) || \u0027Errore\u0027); openModal(); })\n              .withFailureHandler(e\u003d\u003e alert(\u0027Errore: \u0027 + ((e \u0026\u0026 e.message) || e)))\n              .api_approveRequest(id, true, \u0027\u0027);\n          } else if (act \u003d\u003d\u003d \u0027reject\u0027){\n            const why \u003d prompt(\u0027Motivo del rifiuto (opzionale):\u0027,\u0027\u0027) || \u0027\u0027;\n            google.script.run\n              .withSuccessHandler(r\u003d\u003e{ alert(r \u0026\u0026 r.ok ? \u0027Richiesta rifiutata.\u0027 : (r \u0026\u0026 r.message) || \u0027Errore\u0027); openModal(); })\n              .withFailureHandler(e\u003d\u003e alert(\u0027Errore: \u0027 + ((e \u0026\u0026 e.message) || e)))\n              .api_approveRequest(id, false, why);\n          }\n        } else if (typ \u003d\u003d\u003d \u0027ASSISTENZA\u0027){\n          if (act \u003d\u003d\u003d \u0027ack\u0027){\n            btn.disabled \u003d true; btn.textContent \u003d \u0027Salvataggio...\u0027;\n            google.script.run\n              .withSuccessHandler(r\u003d\u003e{ alert(r \u0026\u0026 r.ok ? \u0027Assistenza segnata come gestita.\u0027 : (r \u0026\u0026 r.message) || \u0027Errore\u0027); openModal(); })\n              .withFailureHandler(e\u003d\u003e alert(\u0027Errore: \u0027 + ((e \u0026\u0026 e.message) || e)))\n              .api_ackAssistenza(id);\n          }\n        }\n      });\n    });\n  }\n\n  function tick(){\n  const sid \u003d (window \u0026\u0026 window.CF_SID) || \u0027\u0027;\n  if (!sid) return; // a√∫n sin sesi√≥n: evitamos llamar al server\n\n  google.script.run\n    .withSuccessHandler(res\u003d\u003e{\n      const n \u003d (res \u0026\u0026 res.ok) ? (res.total||0) : 0;\n      if (el.count) el.count.textContent \u003d String(n);\n      if (firstTick){ lastCount \u003d n; firstTick \u003d false; }\n      else if (n \u003e lastCount \u0026\u0026 n \u003e 0){ pulseAndBeep(n); }\n      else { lastCount \u003d n; }\n    })\n    .withFailureHandler(()\u003d\u003e{})\n    .api_countNotificationsForCapoV2(sid);\n}\n\nfunction start(){ stop(); tick(); pollTimer \u003d setInterval(tick, 15000); }\nfunction stop(){ if (pollTimer){ clearInterval(pollTimer); pollTimer \u003d null; } if (el.count) el.count.textContent\u003d\u00270\u0027; lastCount\u003d0; firstTick\u003dtrue; }\n\nfunction openModal(){\n  if (!el.modal) return;\n  const sid \u003d (window \u0026\u0026 window.CF_SID) || \u0027\u0027;\n  if (!sid) return; // sin sesi√≥n, no abrimos listado\n\n  el.list.textContent \u003d \u0027Caricamento...\u0027;\n  el.modal.style.display\u003d\u0027grid\u0027;\n  el.modal.setAttribute(\u0027aria-hidden\u0027,\u0027false\u0027);\n\n  google.script.run\n    .withSuccessHandler(res\u003d\u003e{ renderItems((res \u0026\u0026 res.ok \u0026\u0026 Array.isArray(res.items)) ? res.items : []); })\n    .withFailureHandler(err\u003d\u003e{ el.list.textContent \u003d \u0027Errore: \u0027 + ((err \u0026\u0026 err.message) || err); })\n    .api_listNotificationsForCapoV2(sid);\n}\n\nel.notif \u0026\u0026 el.notif.addEventListener(\u0027click\u0027, openModal);\nel.notif \u0026\u0026 el.notif.addEventListener(\u0027keydown\u0027, (e)\u003d\u003e{ if (e.key\u003d\u003d\u003d\u0027Enter\u0027||e.key\u003d\u003d\u003d\u0027 \u0027){ e.preventDefault(); openModal(); }});\nel.close \u0026\u0026 el.close.addEventListener(\u0027click\u0027, ()\u003d\u003e{ el.modal.style.display\u003d\u0027none\u0027; el.modal.setAttribute(\u0027aria-hidden\u0027,\u0027true\u0027); });\n\n// API p√∫blica para index.html\nwindow.Notif \u003d { start, stop, open: openModal };\n})();\n\u003c/script\u003e\n\n"},{"id":"6df6732f-20bf-470d-94cf-a6ea04209a12","name":"request_capoturno","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RICHIEDI CAPOTURNO / VICE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\n\n/** (Opcional) Obtener contactos de la squad */\nfunction RC_getSquadContacts_(squad_id){\n  const sh \u003d ensureSquads_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const ixId   \u003d head.indexOf(\u0027squad_id\u0027);\n  const ixCapoName  \u003d head.indexOf(\u0027capo_name\u0027);\n  const ixViceName  \u003d head.indexOf(\u0027vice_name\u0027);\n  const ixCapoEmail \u003d head.indexOf(\u0027capo_email\u0027);\n  const ixViceEmail \u003d head.indexOf(\u0027vice_email\u0027);\n\n  for (let r\u003d1; r\u003cdata.length; r++){\n    if (String(data[r][ixId]) \u003d\u003d\u003d String(squad_id)){\n      return {\n        capo_name : (data[r][ixCapoName]  || \u0027\u0027).toString().trim(),\n        capo_email: (data[r][ixCapoEmail] || \u0027\u0027).toString().trim(),\n        vice_name : (data[r][ixViceName]  || \u0027\u0027).toString().trim(),\n        vice_email: (data[r][ixViceEmail] || \u0027\u0027).toString().trim()\n      };\n    }\n  }\n  return { capo_name:\u0027\u0027, capo_email:\u0027\u0027, vice_name:\u0027\u0027, vice_email:\u0027\u0027 };\n}\n\n/**\n * API del bot√≥n \"Richiedi capoturno\"\n * body \u003d { target: \u0027CAPOTURNO\u0027|\u0027VICE\u0027, linea:\u0027\u0027, message:\u0027\u0027 }\n * -\u003e Registra en ASSISTENZE como PENDING. La burbuja lo mostrar√° al capoturno/vice correspondiente.\n */\nfunction api_requestCapoturno(body){\n  try{\n    const u \u003d getCurrentUser_();\n    if (!u || !u.is_active) return { ok:false, message:\u0027Utente non attivo.\u0027 };\n\n    const targetRaw \u003d (body \u0026\u0026 body.target || \u0027\u0027).toString().trim().toUpperCase();\n    const target \u003d (targetRaw \u003d\u003d\u003d \u0027VICE\u0027 || targetRaw \u003d\u003d\u003d \u0027VICE_CAPOTURNO\u0027 || targetRaw \u003d\u003d\u003d \u0027VICECAPOTURNO\u0027) ? \u0027VICE\u0027\n                  : (targetRaw \u003d\u003d\u003d \u0027CAPO\u0027 || targetRaw \u003d\u003d\u003d \u0027CAPOTURNO\u0027) ? \u0027CAPOTURNO\u0027\n                  : \u0027\u0027;\n    if (!target) return { ok:false, message:\u0027Seleziona CAPOTURNO o VICE.\u0027 };\n\n    const linea \u003d (body \u0026\u0026 body.linea || \u0027\u0027).toString().trim();\n    const message \u003d (body \u0026\u0026 body.message || \u0027\u0027).toString().trim();\n    if (!linea) return { ok:false, message:\u0027Inserisci la linea.\u0027 };\n\n    const id \u003d createAssistenzaPending_(target, linea, message, u);\n    return { ok:true, assist_id:id, message:\u0027Richiesta registrata. Il capoturno/vice la vedr√† nelle notifiche.\u0027 };\n  } catch(e){\n    return { ok:false, message:e.message };\n  }\n}\n"},{"id":"b57a40b8-b59f-4a07-b67e-5f39c9258a23","name":"capoturno","type":"html","source":"\u003c!-- PARCIAL: RICHIEDI CAPOTURNO / VICE --\u003e\n\u003cdiv id\u003d\"modalCapoturno\" class\u003d\"modal\" aria-hidden\u003d\"true\" style\u003d\"display:none\"\u003e\n  \u003cdiv class\u003d\"card\"\u003e\n    \u003ch3\u003eRichiedi Capoturno / Vice\u003c/h3\u003e\n\n    \u003cdiv class\u003d\"field\"\u003e\n      \u003cdiv class\u003d\"label\"\u003eDestinatario\u003c/div\u003e\n      \u003cselect id\u003d\"rc_target\" required\u003e\n        \u003coption value\u003d\"CAPOTURNO\"\u003eCapoturno\u003c/option\u003e\n        \u003coption value\u003d\"VICE\"\u003eVice capoturno\u003c/option\u003e\n      \u003c/select\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class\u003d\"field\"\u003e\n      \u003cdiv class\u003d\"label\"\u003eLinea\u003c/div\u003e\n      \u003cinput id\u003d\"rc_linea\" class\u003d\"input\" type\u003d\"text\" placeholder\u003d\"Es. L4 o 4\" required /\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class\u003d\"field\"\u003e\n      \u003cdiv class\u003d\"label\"\u003eMessaggio\u003c/div\u003e\n      \u003ctextarea id\u003d\"rc_msg\" class\u003d\"input\" style\u003d\"height:92px; resize:vertical\" placeholder\u003d\"Es. Fermo linea. Guasto Flowpack.\"\u003e\u003c/textarea\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class\u003d\"actions\"\u003e\n      \u003cbutton id\u003d\"rc_close\" class\u003d\"btn btn-ghost\" type\u003d\"button\"\u003eChiudi\u003c/button\u003e\n      \u003cbutton id\u003d\"rc_send\"  class\u003d\"btn btn-primary\" type\u003d\"button\"\u003eInvia richiesta\u003c/button\u003e\n    \u003c/div\u003e\n\n    \u003cp id\u003d\"rc_feedback\" class\u003d\"muted\" style\u003d\"margin-top:10px\"\u003e\u003c/p\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003cscript\u003e\n(function(){\n  // Helpers locales (fallback si no existen en index)\n  const _show \u003d (window.show) || function(el){ el.style.display\u003d\u0027grid\u0027; el.setAttribute(\u0027aria-hidden\u0027,\u0027false\u0027); };\n  const _hide \u003d (window.hide) || function(el){ el.style.display\u003d\u0027none\u0027; el.setAttribute(\u0027aria-hidden\u0027,\u0027true\u0027); };\n  const _disable \u003d (window.disable) || function(el){ el.disabled\u003dtrue; el.classList.add(\u0027is-loading\u0027); };\n  const _enable  \u003d (window.enable)  || function(el){ el.disabled\u003dfalse; el.classList.remove(\u0027is-loading\u0027); };\n\n  const els \u003d {\n    modal:  document.getElementById(\u0027modalCapoturno\u0027),\n    target: document.getElementById(\u0027rc_target\u0027),\n    linea:  document.getElementById(\u0027rc_linea\u0027),\n    msg:    document.getElementById(\u0027rc_msg\u0027),\n    send:   document.getElementById(\u0027rc_send\u0027),\n    close:  document.getElementById(\u0027rc_close\u0027),\n    fb:     document.getElementById(\u0027rc_feedback\u0027),\n    btn:    document.getElementById(\u0027btn_capoturno\u0027) // bot√≥n ya presente en index\n  };\n\n  function openModal(){\n    els.fb.textContent \u003d \u0027\u0027;\n    els.target.value \u003d \u0027CAPOTURNO\u0027;\n    els.linea.value \u003d \u0027\u0027;\n    els.msg.value \u003d \u0027\u0027;\n    _show(els.modal);\n    setTimeout(()\u003d\u003e els.target.focus(), 50);\n  }\n\n  function closeModal(){\n    _hide(els.modal);\n  }\n\n  function sendRequest(){\n    const target \u003d (els.target.value||\u0027\u0027).toUpperCase();\n    const linea \u003d (els.linea.value||\u0027\u0027).trim();\n    const message \u003d (els.msg.value||\u0027\u0027).trim();\n\n    if (!target || ![\u0027CAPOTURNO\u0027,\u0027VICE\u0027].includes(target)) {\n      els.fb.textContent \u003d \u0027Seleziona il destinatario.\u0027;\n      els.fb.style.color \u003d \u0027#b00\u0027;\n      return;\n    }\n    if (!linea){\n      els.fb.textContent \u003d \u0027Inserisci la linea.\u0027;\n      els.fb.style.color \u003d \u0027#b00\u0027;\n      return;\n    }\n\n    _disable(els.send);\n    els.fb.style.color \u003d \u0027#0a0\u0027;\n    els.fb.textContent \u003d \u0027Invio in corso...\u0027;\n\n    google.script.run\n      .withSuccessHandler(function(res){\n        _enable(els.send);\n        if (res \u0026\u0026 res.ok){\n          els.fb.style.color \u003d \u0027#0a0\u0027;\n          els.fb.textContent \u003d res.message || \u0027Richiesta inviata.\u0027;\n          setTimeout(closeModal, 800);\n        } else {\n          els.fb.style.color \u003d \u0027#b00\u0027;\n          els.fb.textContent \u003d (res \u0026\u0026 res.message) || \u0027Errore nell\\\u0027invio.\u0027;\n        }\n      })\n      .withFailureHandler(function(err){\n        _enable(els.send);\n        els.fb.style.color \u003d \u0027#b00\u0027;\n        els.fb.textContent \u003d \u0027Errore: \u0027 + ((err \u0026\u0026 err.message) || err);\n      })\n      .api_requestCapoturno({ target, linea, message });\n  }\n\n  // Bind\n  if (els.btn) els.btn.addEventListener(\u0027click\u0027, openModal);\n  els.close.addEventListener(\u0027click\u0027, closeModal);\n  els.send.addEventListener(\u0027click\u0027, sendRequest);\n})();\n\u003c/script\u003e\n"},{"id":"1a0183b6-c58e-4861-bbd1-0596ce34ed41","name":"assistenze_core","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ASSISTENZE (Capoturno / Vice) \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\n\nfunction AC_nowIso_(){ return new Date().toISOString(); }\n\nfunction ensureAssistenze_(){\n  const ss \u003d getDb_();\n  return getOrCreateSheet_(ss, \u0027ASSISTENZE\u0027, [\n    \u0027assist_id\u0027,\u0027created_at\u0027,\u0027created_by_user_id\u0027,\u0027created_by_email\u0027,\n    \u0027squad_id\u0027,\u0027target\u0027,\u0027linea\u0027,\u0027message\u0027,\n    \u0027status\u0027,\u0027ack_by_user_id\u0027,\u0027ack_at\u0027,\u0027payload_json\u0027\n  ]);\n}\n\n/** Crea una asistencia PENDIENTE (Capoturno/Vice) */\nfunction createAssistenzaPending_(target, linea, message, requester){\n  const sh \u003d ensureAssistenze_();\n  const id \u003d \u0027AS-\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n  const row \u003d [\n    id, AC_nowIso_(), requester.user_id, requester.email,\n    requester.squad_id, String(target||\u0027\u0027).toUpperCase(), String(linea||\u0027\u0027), String(message||\u0027\u0027),\n    \u0027PENDING\u0027,\u0027\u0027, \u0027\u0027, JSON.stringify({created_by: requester.email, target, linea, message})\n  ];\n  sh.appendRow(row);\n  return id;\n}\n\n/** ¬øEl usuario puede ver esta asistencia? (por rol y target) */\nfunction AC_isApproverForTarget_(user, target){\n  const t \u003d String(target||\u0027\u0027).toUpperCase();\n  const role \u003d String(user.role_id||\u0027\u0027).toUpperCase();\n  if (role \u003d\u003d\u003d \u0027R001\u0027) return true; // JEFE ve todo\n  if (role \u003d\u003d\u003d \u0027R002\u0027) return (t \u003d\u003d\u003d \u0027CAPOTURNO\u0027 || t \u003d\u003d\u003d \u0027CAPO\u0027); // CAPO\n  if (role \u003d\u003d\u003d \u0027R003\u0027) return (t \u003d\u003d\u003d \u0027VICE\u0027 || t \u003d\u003d\u003d \u0027VICE_CAPOTURNO\u0027); // VICE\n  return false;\n}\n\n/** Conteo de asistencias PENDING para el aprobador actual */\nfunction api_countAssistenzeForCapo(){\n  try{\n    const u \u003d getCurrentUser_();\n    const sh \u003d ensureAssistenze_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixSquad \u003d head.indexOf(\u0027squad_id\u0027);\n    const ixTarget\u003d head.indexOf(\u0027target\u0027);\n    const ixStatus\u003d head.indexOf(\u0027status\u0027);\n    let count \u003d 0;\n    for (let r\u003d1; r\u003cdata.length; r++){\n      const row \u003d data[r];\n      if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) continue;\n      if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDING\u0027) continue;\n      if (!AC_isApproverForTarget_(u, row[ixTarget])) continue;\n      count++;\n    }\n    return { ok:true, count };\n  } catch(e){\n    return { ok:false, message:e.message, count:0 };\n  }\n}\n\n/** Lista de asistencias PENDING para el aprobador actual */\nfunction api_listAssistenzeForCapo(){\n  try{\n    const u \u003d getCurrentUser_();\n    const sh \u003d ensureAssistenze_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixId     \u003d head.indexOf(\u0027assist_id\u0027);\n    const ixAt     \u003d head.indexOf(\u0027created_at\u0027);\n    const ixByMail \u003d head.indexOf(\u0027created_by_email\u0027);\n    const ixSquad  \u003d head.indexOf(\u0027squad_id\u0027);\n    const ixTarget \u003d head.indexOf(\u0027target\u0027);\n    const ixLinea  \u003d head.indexOf(\u0027linea\u0027);\n    const ixMsg    \u003d head.indexOf(\u0027message\u0027);\n    const ixStatus \u003d head.indexOf(\u0027status\u0027);\n\n    const items \u003d [];\n    for (let r\u003d1; r\u003cdata.length; r++){\n      const row \u003d data[r];\n      if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) continue;\n      if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDING\u0027) continue;\n      if (!AC_isApproverForTarget_(u, row[ixTarget])) continue;\n\n      items.push({\n        type: \u0027ASSISTENZA\u0027,\n        assist_id: row[ixId],\n        created_at: row[ixAt],\n        requester_email: row[ixByMail],\n        squad_id: row[ixSquad],\n        target: row[ixTarget],\n        linea: row[ixLinea],\n        message: row[ixMsg]\n      });\n    }\n    items.sort((a,b)\u003d\u003e new Date(b.created_at) - new Date(a.created_at));\n    return { ok:true, items };\n  } catch(e){\n    return { ok:false, message:e.message, items:[] };\n  }\n}\n\n/** Marcar asistencia como gestionada (CLOSED) */\nfunction api_ackAssistenza(assist_id){\n  try{\n    const u \u003d getCurrentUser_();\n    const sh \u003d ensureAssistenze_();\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixId     \u003d head.indexOf(\u0027assist_id\u0027);\n    const ixSquad  \u003d head.indexOf(\u0027squad_id\u0027);\n    const ixTarget \u003d head.indexOf(\u0027target\u0027);\n    const ixStatus \u003d head.indexOf(\u0027status\u0027);\n    const ixAckBy  \u003d head.indexOf(\u0027ack_by_user_id\u0027);\n    const ixAckAt  \u003d head.indexOf(\u0027ack_at\u0027);\n\n    let rowIdx \u003d -1;\n    for (let r\u003d1; r\u003cdata.length; r++){\n      if (String(data[r][ixId]) \u003d\u003d\u003d String(assist_id)){\n        rowIdx \u003d r+1; break;\n      }\n    }\n    if (rowIdx \u003c 0) return { ok:false, message:\u0027Assistenza non trovata.\u0027 };\n\n    const row \u003d sh.getRange(rowIdx,1,1,sh.getLastColumn()).getValues()[0];\n    if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) return { ok:false, message:\u0027Non appartiene alla tua squadra.\u0027 };\n    if (!AC_isApproverForTarget_(u, row[ixTarget])) return { ok:false, message:\u0027Permesso negato.\u0027 };\n    if (String(row[ixStatus]).toUpperCase() !\u003d\u003d \u0027PENDING\u0027) return { ok:false, message:\u0027Gi√† gestita.\u0027 };\n\n    sh.getRange(rowIdx, ixStatus+1).setValue(\u0027CLOSED\u0027);\n    sh.getRange(rowIdx, ixAckBy+1).setValue(u.user_id);\n    sh.getRange(rowIdx, ixAckAt+1).setValue(new Date());\n    return { ok:true, message:\u0027Assistenza segnata come gestita.\u0027 };\n  } catch(e){\n    return { ok:false, message:e.message };\n  }\n}\n"},{"id":"b7dd1b4c-6ef3-4ceb-b254-b8ff8dc057f3","name":"notifications_aggregate","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AGREGADOR DE NOTIFICACIONES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\n\n/** Conteo SCATOLA pendientes para mi squad (igual l√≥gica que api_countPendingForCapo) */\nfunction NA_countScatola_(u){\n  const sh \u003d ensureRequests_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const ixStatus  \u003d head.indexOf(\u0027status\u0027);\n  const ixSquad   \u003d head.indexOf(\u0027squad_id\u0027);\n  let count \u003d 0;\n  for (let r\u003d1; r\u003cdata.length; r++){\n    if (String(data[r][ixSquad]) \u003d\u003d\u003d String(u.squad_id) \u0026\u0026\n        String(data[r][ixStatus]||\u0027\u0027).toUpperCase() \u003d\u003d\u003d \u0027PENDIENTE\u0027){\n      count++;\n    }\n  }\n  return count;\n}\n\n/** Lista SCATOLA pendientes (mapeadas como √≠tems de tipo SCATOLA) */\nfunction NA_listScatola_(u){\n  const sh \u003d ensureRequests_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const ixId      \u003d head.indexOf(\u0027request_id\u0027);\n  const ixAt      \u003d head.indexOf(\u0027created_at\u0027);\n  const ixBy      \u003d head.indexOf(\u0027created_by_user_id\u0027);\n  const ixSquad   \u003d head.indexOf(\u0027squad_id\u0027);\n  const ixType    \u003d head.indexOf(\u0027type\u0027);\n  const ixCliente \u003d head.indexOf(\u0027cliente\u0027);\n  const ixLinea   \u003d head.indexOf(\u0027linea\u0027);\n  const ixQty     \u003d head.indexOf(\u0027quantita\u0027);\n  const ixStatus  \u003d head.indexOf(\u0027status\u0027);\n\n  const items \u003d [];\n  for (let r\u003d1; r\u003cdata.length; r++){\n    const row \u003d data[r];\n    if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) continue;\n    if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDIENTE\u0027) continue;\n    items.push({\n      type: \u0027SCATOLA\u0027,\n      request_id: row[ixId],\n      created_at: row[ixAt],\n      created_by_user_id: row[ixBy],\n      squad_id: row[ixSquad],\n      cliente: row[ixCliente],\n      linea: row[ixLinea],\n      quantita: row[ixQty]\n    });\n  }\n  items.sort((a,b)\u003d\u003e new Date(b.created_at) - new Date(a.created_at));\n  return items;\n}\n\n/** Conteo combinado: SCATOLA + ASSISTENZE */\nfunction api_countNotificationsForCapo(){\n  try{\n    const u \u003d getCurrentUser_();\n    if (!isCapoOrJefe_(u.role_id)) {\n      // Operatori non ven visualizzano notificaciones\n      return { ok:true, total:0, requests:0, assistenze:0 };\n    }\n    const requests \u003d NA_countScatola_(u);\n    const ass \u003d (api_countAssistenzeForCapo().count) || 0;\n    return { ok:true, total: (requests + ass), requests, assistenze: ass };\n  } catch(e){\n    return { ok:false, message:e.message, total:0, requests:0, assistenze:0 };\n  }\n}\n\n/** Listado combinado para el modal */\nfunction api_listNotificationsForCapo(){\n  try{\n    const u \u003d getCurrentUser_();\n    if (!isCapoOrJefe_(u.role_id)) return { ok:true, items:[] };\n\n    const listReq \u003d NA_listScatola_(u);\n    const listAss \u003d (api_listAssistenzeForCapo().items) || [];\n\n    const items \u003d listReq.concat(listAss).sort((a,b)\u003d\u003e new Date(b.created_at) - new Date(a.created_at));\n    return { ok:true, items };\n  } catch(e){\n    return { ok:false, message:e.message, items:[] };\n  }\n}\n"},{"id":"2c1fc23e-39b8-45ea-8a51-109a808e2802","name":"auth_session_sid","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SESSIONES POR SID \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\nfunction SES_nowIso(){ return new Date().toISOString(); }\n\nfunction ensureSessions_(){\n  const ss \u003d getDb_();\n  return getOrCreateSheet_(ss, \u0027SESSIONS\u0027, [\u0027sid\u0027,\u0027email\u0027,\u0027created_at\u0027,\u0027last_seen\u0027]);\n}\n\nfunction SES_create_(email){\n  const sh \u003d ensureSessions_();\n  const sid \u003d \u0027SID-\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n  sh.appendRow([sid, String(email||\u0027\u0027).trim(), SES_nowIso(), SES_nowIso()]);\n  return sid;\n}\n\nfunction SES_touch_(sid){\n  const sh \u003d ensureSessions_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const iSid \u003d head.indexOf(\u0027sid\u0027);\n  const iSeen\u003d head.indexOf(\u0027last_seen\u0027);\n  for (let r\u003d1; r\u003cdata.length; r++){\n    if (String(data[r][iSid]) \u003d\u003d\u003d String(sid)){\n      sh.getRange(r+1, iSeen+1).setValue(new Date());\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction SES_getUserBySid_(sid){\n  const sh \u003d ensureSessions_();\n  const data \u003d sh.getDataRange().getValues();\n  const head \u003d data[0];\n  const iSid \u003d head.indexOf(\u0027sid\u0027);\n  const iEmail \u003d head.indexOf(\u0027email\u0027);\n  let email \u003d \u0027\u0027;\n  for (let r\u003d1; r\u003cdata.length; r++){\n    if (String(data[r][iSid]) \u003d\u003d\u003d String(sid)){ email \u003d (data[r][iEmail]||\u0027\u0027).toString().trim(); break; }\n  }\n  if (!email) throw new Error(\u0027SID non valido.\u0027);\n  const found \u003d findUserByEmail_(email);\n  if (!found) throw new Error(\u0027Utente non trovato per SID.\u0027);\n  const u \u003d {};\n  found.header.forEach((k, idx) \u003d\u003e u[k] \u003d found.rowData[idx]);\n  u.is_active \u003d String(u.is_active).toLowerCase() \u003d\u003d\u003d \u0027true\u0027;\n  return u;\n}\n\n/* Login V2 -\u003e devuelve SID sin depender de UserProperties compartidas */\nfunction loginV2(email, password){\n  const base \u003d login(email, password); // reutiliza tu login existente\n  if (!base || !base.ok) return base;\n  const sid \u003d SES_create_(email);\n  return Object.assign({}, base, { sid });\n}\n"},{"id":"c6e40502-0948-4606-9cb9-af010ece0a74","name":"requests_flow_v2","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SCATOLA V2: con SID y destino CAPO/VICE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */\n\n/* Asegura columna \u0027approver_target\u0027 en REQUESTS */\nfunction RFV2_ensureRequestsTarget_(){\n  const sh \u003d ensureRequests_();\n  const lastCol \u003d Math.max(sh.getLastColumn(), 1);\n  const head \u003d sh.getRange(1,1,1,lastCol).getValues()[0];\n  if (!head.includes(\u0027approver_target\u0027)){\n    sh.insertColumnAfter(lastCol);\n    sh.getRange(1, lastCol+1).setValue(\u0027approver_target\u0027);\n  }\n  return sh;\n}\n\n/**\n * body \u003d { type:\u0027SCATOLA\u0027, cliente, linea, quantita, note?, approver_target:\u0027CAPOTURNO\u0027|\u0027VICE\u0027 }\n * api_requestsCreateOrSendV2(body, sid)\n * - Usa SID para resolver el usuario real (sin compartir sesi√≥n)\n * - Guarda approver_target para que solo vea la notificaci√≥n el rol elegido\n */\nfunction api_requestsCreateOrSendV2(body, sid){\n  try{\n    const user \u003d SES_getUserBySid_(sid);\n    if (!user || !user.is_active) return { ok:false, message:\u0027Utente non attivo.\u0027 };\n\n    const type \u003d String(body \u0026\u0026 body.type || \u0027\u0027).trim().toUpperCase();\n    const cliente \u003d (body \u0026\u0026 body.cliente || \u0027\u0027).trim();\n    const linea   \u003d (body \u0026\u0026 body.linea   || \u0027\u0027).trim();\n    const quantita \u003d parseInt(body \u0026\u0026 body.quantita, 10);\n    const note    \u003d (body \u0026\u0026 body.note    || \u0027\u0027).trim();\n    let target    \u003d (body \u0026\u0026 body.approver_target || \u0027\u0027).toString().trim().toUpperCase();\n    if (target \u003d\u003d\u003d \u0027CAPO\u0027) target \u003d \u0027CAPOTURNO\u0027;\n    if (target \u003d\u003d\u003d \u0027VICE_CAPOTURNO\u0027) target \u003d \u0027VICE\u0027;\n\n    if (type !\u003d\u003d \u0027SCATOLA\u0027) return { ok:false, message:\u0027Tipo non valido.\u0027 };\n    if (!cliente || !linea || !quantita || quantita \u003c\u003d 0) return { ok:false, message:\u0027Campi obbligatori mancanti o non validi.\u0027 };\n    if (!target || ![\u0027CAPOTURNO\u0027,\u0027VICE\u0027].includes(target)) target \u003d \u0027CAPOTURNO\u0027; // default\n\n    const payload \u003d {\n      type: \u0027SCATOLA\u0027,\n      cliente, linea, quantita, note,\n      created_at: nowIso_(),\n      created_by_user_id: user.user_id,\n      created_by_email: user.email,\n      squad_id: user.squad_id,\n      approver_target: target\n    };\n\n    // Aprobadores directos -\u003e Make, Operatore -\u003e pendiente\n    if (isCapoOrJefe_(user.role_id)) {\n      const sent \u003d sendToMake_(payload);\n      if (sent.ok) return { ok:true, message:\u0027Inviato a Make.\u0027, make_status:\u0027SENT\u0027, code: sent.code };\n      return { ok:false, message:\u0027Errore inviando a Make: \u0027 + sent.message };\n    }\n\n    // R004 -\u003e PENDIENTE + guarda approver_target\n    const sh \u003d RFV2_ensureRequestsTarget_();\n    const reqId \u003d createPendingRequest_(payload);\n    // setear approver_target en la fila reci√©n creada\n    const data \u003d sh.getDataRange().getValues();\n    const head \u003d data[0];\n    const ixId  \u003d head.indexOf(\u0027request_id\u0027);\n    const ixTar \u003d head.indexOf(\u0027approver_target\u0027);\n    for (let r\u003d1; r\u003cdata.length; r++){\n      if (String(data[r][ixId]) \u003d\u003d\u003d String(reqId)){\n        sh.getRange(r+1, ixTar+1).setValue(target);\n        break;\n      }\n    }\n    // (Opcional) webhook/email: desactivado por tu requerimiento\n    return { ok:true, request_id: reqId, status:\u0027PENDIENTE\u0027, message:\u0027Richiesta creata. In attesa di approvazione (\u0027+target+\u0027).\u0027 };\n\n  } catch(err){\n    return { ok:false, message:\u0027Errore: \u0027 + err.message };\n  }\n}\n"},{"id":"ae6819b0-1c25-4c5f-b5c0-c8b19d6f5e58","name":"notifications_aggregate_v2","type":"server_js","source":"/* \u003d\u003d\u003d\u003d\u003d\u003d Notificaciones combinadas V2 (con SID y filtro por target) \u003d\u003d\u003d\u003d\u003d\u003d */\n\nfunction NAV2_countScatola_(u){\n  const sh \u003d ensureRequests_();\n  const lastCol \u003d Math.max(sh.getLastColumn(), 1);\n  const head \u003d sh.getRange(1,1,1,lastCol).getValues()[0];\n  const ixStatus \u003d head.indexOf(\u0027status\u0027);\n  const ixSquad  \u003d head.indexOf(\u0027squad_id\u0027);\n  const ixTarget \u003d head.indexOf(\u0027approver_target\u0027); // puede no existir\n\n  let count \u003d 0;\n  for (let r\u003d2; r\u003c\u003dsh.getLastRow(); r++){\n    const row \u003d sh.getRange(r,1,1,head.length).getValues()[0];\n    if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) continue;\n    if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDIENTE\u0027) continue;\n    // Filtro por target (si hay columna)\n    if (ixTarget \u003e\u003d 0){\n      const tgt \u003d String(row[ixTarget]||\u0027\u0027).toUpperCase();\n      if (tgt \u0026\u0026 !AC_isApproverForTarget_(u, tgt)) continue;\n    }\n    count++;\n  }\n  return count;\n}\n\nfunction NAV2_listScatola_(u){\n  const sh \u003d ensureRequests_();\n  const lastCol \u003d Math.max(sh.getLastColumn(), 1);\n  const head \u003d sh.getRange(1,1,1,lastCol).getValues()[0];\n\n  const ixId      \u003d head.indexOf(\u0027request_id\u0027);\n  const ixAt      \u003d head.indexOf(\u0027created_at\u0027);\n  const ixBy      \u003d head.indexOf(\u0027created_by_user_id\u0027);\n  const ixSquad   \u003d head.indexOf(\u0027squad_id\u0027);\n  const ixType    \u003d head.indexOf(\u0027type\u0027);\n  const ixCliente \u003d head.indexOf(\u0027cliente\u0027);\n  const ixLinea   \u003d head.indexOf(\u0027linea\u0027);\n  const ixQty     \u003d head.indexOf(\u0027quantita\u0027);\n  const ixStatus  \u003d head.indexOf(\u0027status\u0027);\n  const ixTarget  \u003d head.indexOf(\u0027approver_target\u0027); // -1 si no existe\n\n  const items \u003d [];\n  for (let r\u003d2; r\u003c\u003dsh.getLastRow(); r++){\n    const row \u003d sh.getRange(r,1,1,head.length).getValues()[0];\n    if (String(row[ixSquad]) !\u003d\u003d String(u.squad_id)) continue;\n    if (String(row[ixStatus]||\u0027\u0027).toUpperCase() !\u003d\u003d \u0027PENDIENTE\u0027) continue;\n    if (ixTarget \u003e\u003d 0){\n      const tgt \u003d String(row[ixTarget]||\u0027\u0027).toUpperCase();\n      if (tgt \u0026\u0026 !AC_isApproverForTarget_(u, tgt)) continue;\n    }\n    items.push({\n      type: \u0027SCATOLA\u0027,\n      request_id: row[ixId],\n      created_at: row[ixAt],\n      created_by_user_id: row[ixBy],\n      squad_id: row[ixSquad],\n      cliente: row[ixCliente],\n      linea: row[ixLinea],\n      quantita: row[ixQty]\n    });\n  }\n  items.sort((a,b)\u003d\u003e new Date(b.created_at) - new Date(a.created_at));\n  return items;\n}\n\n/* Conteo/listado V2: usan SID para user correcto */\nfunction api_countNotificationsForCapoV2(sid){\n  try{\n    const u \u003d SES_getUserBySid_(sid);\n    if (!isCapoOrJefe_(u.role_id)) return { ok:true, total:0, requests:0, assistenze:0 };\n    const req \u003d NAV2_countScatola_(u);\n    const ass \u003d api_countAssistenzeForCapo().count || 0;\n    return { ok:true, total: req + ass, requests: req, assistenze: ass };\n  } catch(e){\n    return { ok:false, message:e.message, total:0, requests:0, assistenze:0 };\n  }\n}\n\nfunction api_listNotificationsForCapoV2(sid){\n  try{\n    const u \u003d SES_getUserBySid_(sid);\n    if (!isCapoOrJefe_(u.role_id)) return { ok:true, items:[] };\n    const listReq \u003d NAV2_listScatola_(u);\n    const listAss \u003d api_listAssistenzeForCapo().items || [];\n    const items \u003d listReq.concat(listAss).sort((a,b)\u003d\u003e new Date(b.created_at) - new Date(a.created_at));\n    return { ok:true, items };\n  } catch(e){\n    return { ok:false, message:e.message, items:[] };\n  }\n}\n"},{"id":"3f41dd2a-ebc3-4565-a2ed-ec7f6ae35775","name":"admin_operator_sergio","type":"server_js","source":"/** Crea/actualiza a SERGIO como OPERATORE (R004) y lo asocia a la squad de Carlo Marino */\nfunction RUN_UPSERT_OPERATOR_SERGIO_EN_SQUAD_CARLO(){\n  var email    \u003d \u0027sergiom@temp.local\u0027;\n  var password \u003d \u002712345\u0027;            // solo para pruebas\n  var nome     \u003d \u0027Sergio\u0027;\n  var cognome  \u003d \u0027M\u0027;\n  var capoFull \u003d \u0027Carlo Marino\u0027;\n\n  var shUsers  \u003d ensureUsers_();\n  var shSquads \u003d ensureSquads_();\n\n  // Buscar squad de \"Carlo Marino\" (por capo_name, fallback por squad_name)\n  var headS \u003d shSquads.getRange(1,1,1,Math.max(1, shSquads.getLastColumn())).getValues()[0];\n  var s_ixId   \u003d headS.indexOf(\u0027squad_id\u0027);\n  var s_ixName \u003d headS.indexOf(\u0027squad_name\u0027);\n  var s_ixCapo \u003d headS.indexOf(\u0027capo_name\u0027);\n\n  var dataS \u003d shSquads.getDataRange().getValues();\n  var squadId \u003d null;\n\n  for (var i\u003d1;i\u003cdataS.length;i++){\n    if (String(dataS[i][s_ixCapo]||\u0027\u0027).trim() \u003d\u003d\u003d capoFull){ squadId \u003d String(dataS[i][s_ixId]||\u0027\u0027).trim(); break; }\n  }\n  if (!squadId){\n    for (var j\u003d1;j\u003cdataS.length;j++){\n      if (String(dataS[j][s_ixName]||\u0027\u0027).trim() \u003d\u003d\u003d capoFull){ squadId \u003d String(dataS[j][s_ixId]||\u0027\u0027).trim(); break; }\n    }\n  }\n  if (!squadId){\n    // Si no existe, la creamos m√≠nima para evitar errores\n    squadId \u003d \u0027SQUAD-\u0027 + capoFull.toUpperCase().replace(/\\s+/g,\u0027\u0027).slice(0,12);\n    shSquads.appendRow([squadId, capoFull, capoFull, \u0027\u0027, \u0027\u0027, \u0027\u0027]);\n  }\n\n  // Upsert en USERS con rol R004 + password HASH\n  var headU    \u003d shUsers.getRange(1,1,1,Math.max(1, shUsers.getLastColumn())).getValues()[0];\n  var u_ixEmail\u003d headU.indexOf(\u0027email\u0027);\n  var u_ixRole \u003d headU.indexOf(\u0027role_id\u0027);\n  var u_ixSquad\u003d headU.indexOf(\u0027squad_id\u0027);\n  var u_ixHash \u003d headU.indexOf(\u0027password_hash\u0027);\n  var u_ixAct  \u003d headU.indexOf(\u0027is_active\u0027);\n\n  var dataU \u003d shUsers.getDataRange().getValues();\n  var foundRow \u003d null;\n  for (var r\u003d1;r\u003cdataU.length;r++){\n    if (String(dataU[r][u_ixEmail]||\u0027\u0027).toLowerCase() \u003d\u003d\u003d email.toLowerCase()){ foundRow \u003d r+1; break; }\n  }\n\n  var hash \u003d hashPassword_(password, email);\n  if (foundRow){\n    if (u_ixRole \u003e\u003d0)  shUsers.getRange(foundRow, u_ixRole+1 ).setValue(\u0027R004\u0027);\n    if (u_ixSquad\u003e\u003d0)  shUsers.getRange(foundRow, u_ixSquad+1).setValue(squadId);\n    if (u_ixHash \u003e\u003d0)  shUsers.getRange(foundRow, u_ixHash+1 ).setValue(hash);\n    if (u_ixAct  \u003e\u003d0)  shUsers.getRange(foundRow, u_ixAct+1  ).setValue(true);\n  } else {\n    var user_id \u003d \u0027U\u0027 + Utilities.getUuid().slice(0,8).toUpperCase();\n    shUsers.appendRow([user_id, nome, cognome, email, \u0027R004\u0027, squadId, true, new Date(), hash]);\n  }\n\n  // (Opcional) exportar a CREDENTIALS si existe\n  try{\n    var ss \u003d getDb_();\n    var cred \u003d ss.getSheetByName(\u0027CREDENTIALS\u0027);\n    if (cred){ cred.appendRow([nome, cognome, email, \u0027R004\u0027, squadId, password]); }\n  }catch(e){}\n\n  Logger.log(\u0027Operatore listo -\u003e \u0027 + email + \u0027 / \u0027 + password + \u0027 (R004, squad \u0027 + squadId + \u0027)\u0027);\n  return { ok:true, email: email, role_id:\u0027R004\u0027, squad_id: squadId };\n}\n"}]}